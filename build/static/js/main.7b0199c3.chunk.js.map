{"version":3,"sources":["Components/ProductCard.tsx","Redux/Product/action.ts","Redux/Product/types.ts","Redux/Product/thunk.ts","Model/db.ts","Routes/Home.tsx","Hooks/useInput.ts","Routes/AddProduct.tsx","Styles/Theme.ts","Styles/GlobalStyle.ts","Redux/User/action.ts","Redux/User/types.ts","Redux/User/thunk.ts","Routes/Login.tsx","baseurl.ts","Components/Input.tsx","Routes/SignUp.tsx","Redux/Admin/reducer.ts","Redux/Admin/thunk.ts","Components/Qna/QnaLine.tsx","Components/Qna/QnaContainer.tsx","Routes/ProductDetail.tsx","Components/ModalTop.tsx","Components/Qna/QnaForm.tsx","Redux/Popup/reducer.ts","Components/AnswerForm.tsx","Components/Icons.tsx","Components/FatProductCard.tsx","Components/Cart.tsx","Components/Header.tsx","Components/Layout.tsx","Components/Address/AddressForm.tsx","Api/KaKaoAddressApi.ts","Components/Payment.tsx","Routes/OrderSheet.tsx","Routes/ChargeCash.tsx","Routes/OrderList.tsx","Components/Admin/ProductListElem.tsx","Components/Modal/ChangeProductForm.tsx","Components/Admin/ProductList.tsx","Components/Admin/QuestionList.tsx","Routes/AdminPage.tsx","Routes/ForbiddenPage.tsx","Components/RouterIf.tsx","Components/RedirectBaseurl.tsx","App.tsx","Redux/Product/reducer.ts","Redux/User/reducer.ts","Redux/index.ts","index.tsx","Redux/Store/configureStore.js"],"names":["Box","styled","div","P","p","Strong","ProductCard","product","to","id","width","height","src","thumbnail","name","price","addProductSuccess","type","payload","editProductSuccess","dbUrl","process","addProductsAPI","a","axios","post","withCredentials","checkServerConnet","err","response","toast","error","getProducts","dispatch","data","addProduct","console","dir","addQuestionAPI","param","addQuestion","addAnswerAPI","addAnswer","log","getPrdQueAPI","productId","get","addImageAPI","form","idx","addImage","editProductAPI","editProduct","success","getProductDetailAPI","productIndex","getProductDetail","ProductCardContainer","Container","ProductList","Text","Home","useDispatch","productList","useSelector","state","products","useEffect","map","i","key","useInputStr2","defaultValue","useState","value","setValue","onChange","e","target","useInputStr","useInputNum","Number","useInputNumMaxLen","maxlen","length","Column","Form","AddProduct","props","setName","setPrice","onChangePrice","stock","setStock","onChangeStock","description","setDescription","onChangeDescription","url","imgUrls","setimgUrls","imgList","imagesPath","toString","newArr","forEach","img","addImgUrl","onChangeUrl","files","image","formData","FormData","append","submitForm","preventDefault","productForm","history","push","encType","onSubmit","elem","placeholder","required","imgUrl","accept","onClick","theme","basicWidth","colors","main","secondary","GlobalStyle","createGlobalStyle","reset","getProfileAction","createAsyncAction","loginAction","logoutAction","signUpAction","checkIdAction","addCartAction","deleteCartAction","addOrderAction","chargeCashAction","getOrdersAction","emptyCartAction","logInAPI","sighUpAPI","checkIdAPI","addCartAPI","deleteCartAPI","checkId","request","failure","addOrderAPI","chargeCashAPI","cash","emptyCartAPI","Login","userId","onUserId","password","onPassword","message","logIn","Input","inputProp","inputprops","undefined","readOnly","Line","SignUp","checkIdState","user","passwordCheck","email","phone","possible","requestSignup","newUser","signUp","getAllQuestionAction","adminReducer","createReducer","qna","qnaErr","GET_ALL_QUESTIONS_REQUEST","GET_ALL_QUESTIONS_SUCCESS","action","GET_ALL_QUESTIONS_FAILURE","getAllQuestion","QuestionItem","AnswerItem","QnaLine","page","pid","popupClosed","setpopupClosed","visibleAnswer","setvisibleAnswer","isAdmin","newUserId","slice","answer","popup","window","open","interval","setInterval","closed","clearInterval","content","createdAt","QnaBox","QnaHeader","Button","button","QnaList","TextStrong","QnaListTop","QnaContainer","qnaList","getPrdQueList","question","Wrapper","ProductWrapper","ProductHeader","ProductPreview","ProductBuy","Row","ProductDescriptions","Stock","Price","AddCartBtn","NaverPay","withRouter","match","productDetail","params","info","productImage","qnas","WhiteBox","ModalTop","close","Header","TextContainer","TextArea","textarea","LimitLabel","isSubmit","setisSubmit","addQuestionErr","settextarea","clickQnaBtn","trim","maxLength","getQnaAction","getQnaAPI","qnaId","userReducer","address","addQna","result","GET_QNA_REQUEST","GET_QNA_SUCCESS","GET_QNA_FAILURE","SAVE_ADDRESS","QuestionBox","Label","getQuestion","qerr","qId","CartIcon","size","xmlns","viewBox","d","Logo","Add","RightArrow","Out","AddUser","fillRule","clipRule","UserProfile","Setting","ProductDescription","Image","RemoveBtn","FatProductCard","Backgroud","Top","ProductCartWraper","toggleCartVisible","cart","document","body","style","cssText","scrollY","top","scrollTo","parseInt","Item","LeftContent","RightContent","cartVisible","setcartVisible","logOut","Footer","Layout","children","AddressSearchBox","AddressSearchBoxColumn","AddressForm","addressFormProp","zip","setzip","setaddress","address2","phone1","phone2","phone3","delivermessage","daum","Postcode","oncomplete","zonecode","findAddress","Title","Alert","span","Payment","setpaymentPossible","remainCash","CartItemList","ProductColumn","Section","OrderSheet","quantityList","setQuantityList","totalPrice","settotalPrice","paymentPossible","newQuantityList","quantity","reduce","ac","cu","onQuantity","changedElem","newPrice","productIdAndCount","item","count","setTimeout","Error","addOrder","address1","zipcode","point","ChargeCash","chargeAmount","useInputNum2","TopProductCard","OrderCard","ProductCardColumn","ShipmentCard","ProductInfo","OrderList","orders","order","orderNumber","li","ProductListElem","setproduct","setmodalVisible","ChangeProductForm","location","ul","modalVisible","ButtonBox","QuestionList","admin","clickGoProduct","HeaderColumn","AdminPage","setstate","clickHeader","h1","ForbiddenPage","RouterIf","Component","component","isAuth","path","render","RedirectBaseurl","useHistory","exitBaseurl","pathname","indexOf","newPath","replace","App","AnswerForm","exact","ProductDetail","QnaForm","position","POSITION","BOTTOM_LEFT","initialState","willDelete","deleteProduct","addReview","getPrdQuestions","addImageErr","editProductErr","productReducer","curProducts","newProducts","pro","proId","preProducts","newproducts","qnaIdx","splice","questionList","newProductList","returnProduct","editProductList","getProfileErr","getUsersErr","loginErr","logoutErr","signUpErr","checkIdErr","editProfileErr","addCartErr","deleteCartErr","addOrderErr","chargeErr","getOrdersErr","addReivewErr","emptyCartErr","GET_PROFILE_REQUEST","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHECK_ID_REQUEST","CHECK_ID_SUCCESS","CHECK_ID_FAILURE","EDIT_PROFILE_REQUEST","EDIT_PROFILE_SUCCESS","EDIT_PROFILE_FAILURE","ADD_CART_REQUEST","ADD_CART_SUCCESS","ADD_CART_FAILURE","DELETE_CART_REQUEST","DELETE_CART_SUCCESS","DELETE_CART_FAILURE","ADD_ORDER_REQUEST","ADD_ORDER_SUCCESS","ADD_ORDER_FAILURE","CHARGE_CASH_REQUEST","CHARGE_CASH_SUCCESS","CHARGE_CASH_FAILURE","GET_ORDERS_REQUEST","GET_ORDERS_SUCCESS","GET_ORDERS_FAILURE","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","review","orderId","reviews","ADD_REVIEW_FAILURE","addReviewErr","EMPTY_CART_REQUEST","EMPTY_CART_SUCCESS","EMPTY_CART_FAILURE","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","configureStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7b0199c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Product } from \"../Model/db\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* const Container = styled.div`\r\n    width: 300px;\r\n\r\n`; */\r\n\r\nconst Box = styled.div`\r\n  margin-top: 3em;\r\n  margin-right: 20px;\r\n  background-color: white;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst P = styled.p`\r\n  margin-top: 0.3em;\r\n`;\r\nconst Strong = styled.div`\r\n  margin-top: 0.5em;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default function ProductCard({ product }: { product: Product }) {\r\n  return (\r\n    <Box>\r\n      <Link to={`/productDetail/${product.id}`}>\r\n        <img width={280} height={280} src={product.thumbnail}></img>\r\n      </Link>\r\n      <P>{product.name}</P>\r\n      <Strong>{product.price} 원</Strong>\r\n    </Box>\r\n  );\r\n}\r\n","import * as types from \"./types\";\r\nimport { Product, Review, Qna } from \"../../Model/db\";\r\nimport { AxiosError } from \"axios\";\r\n\r\n// 엑션의 타입을 인터페이스로 정의하고 액션생성자도 따로 만들어야 되서 코드가 길어진다\r\n// 액션 생성자만 따로 만들고 ReturnType 을 이용해 인터페이스를 사용하지 않는다\r\n//typesafe-actions 를 안쓰고 작성하면 작성해야하는 코드의 양이 늘어난다.\r\nexport interface GetProductsRequestAction {\r\n  type: typeof types.GET_PRODUCTS_REQUEST;\r\n}\r\nexport interface GetProductsSuccessAction {\r\n  type: typeof types.GET_PRODUCTS_SUCCESS;\r\n  payload: Product[];\r\n}\r\nexport interface GetProductsFailureAction {\r\n  type: typeof types.GET_PRODUCTS_FAILURE;\r\n  payload: AxiosError;\r\n}\r\n\r\nexport const getProductsRequest = (): GetProductsRequestAction => {\r\n  return {\r\n    type: types.GET_PRODUCTS_REQUEST,\r\n  };\r\n};\r\nexport const getProductsSuccess = (\r\n  products: Product[]\r\n): GetProductsSuccessAction => {\r\n  return {\r\n    type: types.GET_PRODUCTS_SUCCESS,\r\n    payload: products,\r\n  };\r\n};\r\nexport const getProductsFailure = (\r\n  err: AxiosError\r\n): GetProductsFailureAction => {\r\n  return {\r\n    type: types.GET_PRODUCTS_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\nexport const addProductRequest = () => {\r\n  return {\r\n    type: types.ADD_PRODUCT_REQUEST,\r\n  } as const;\r\n};\r\nexport const addProductSuccess = (product: Product) => {\r\n  return <const>{\r\n    type: types.ADD_PRODUCT_SUCCESS,\r\n    payload: product,\r\n  };\r\n};\r\nexport const addProductFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.ADD_PRODUCT_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const willDeleteProductRequest = () => {\r\n  return <const>{\r\n    type: types.WILL_DELETE_PRODUCT_REQUEST,\r\n  };\r\n};\r\nexport const willDeleteProductSuccess = () => {\r\n  return <const>{\r\n    type: types.WILL_DELETE_PRODUCT_SUCCESS,\r\n  };\r\n};\r\nexport const willDeleteProductFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.WILL_DELETE_PRODUCT_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const deleteProductRequest = () => {\r\n  return <const>{\r\n    type: types.DELETE_PRODUCT_REQUEST,\r\n  };\r\n};\r\nexport const deleteProductSuccess = () => {\r\n  return <const>{\r\n    type: types.DELETE_PRODUCT_SUCCESS,\r\n  };\r\n};\r\nexport const deleteProductFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.DELETE_PRODUCT_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const addReviewRequest = () => {\r\n  return <const>{\r\n    type: types.ADD_REVIEW_REQUEST,\r\n  };\r\n};\r\nexport const addReviewSuccess = (review: Review) => {\r\n  return <const>{\r\n    type: types.ADD_REVIEW_SUCCESS,\r\n    payload: review,\r\n  };\r\n};\r\nexport const addReviewFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.ADD_REVIEW_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const addQuestionRequest = () => {\r\n  return <const>{\r\n    type: types.ADD_QUESTION_REQUEST,\r\n  };\r\n};\r\nexport const addQuestionSuccess = (qna: Qna) => {\r\n  return <const>{\r\n    type: types.ADD_QUESTION_SUCCESS,\r\n    payload: qna,\r\n  };\r\n};\r\nexport const addQuestionFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.ADD_QUESTION_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\nexport const addAnswerRequest = () => {\r\n  return <const>{\r\n    type: types.ADD_ANSWER_REQUEST,\r\n  };\r\n};\r\nexport const addAnswerSuccess = (qna: Qna) => {\r\n  return <const>{\r\n    type: types.ADD_ANSWER_SUCCESS,\r\n    payload: qna,\r\n  };\r\n};\r\nexport const addAnswerFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.ADD_ANSWER_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const getPrdQuestionListRequest = () => {\r\n  return <const>{\r\n    type: types.GET_PRD_QUESTIONS_REQUEST,\r\n  };\r\n};\r\nexport const getPrdQuestionListSuccess = ({\r\n  qnaList,\r\n  productId,\r\n}: {\r\n  qnaList: Qna[];\r\n  productId: string;\r\n}) => {\r\n  return <const>{\r\n    type: types.GET_PRD_QUESTIONS_SUCCESS,\r\n    payload: { qnaList, productId },\r\n  };\r\n};\r\nexport const getPrdQuestionListFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.GET_PRD_QUESTIONS_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const addImageRequest = () => {\r\n  return <const>{\r\n    type: types.ADD_IMAGE_REQUEST,\r\n  };\r\n};\r\nexport const addImageSuccess = (imagePath: { url: string; idx: string }[]) => {\r\n  return <const>{\r\n    type: types.ADD_IMAGE_SUCCESS,\r\n    payload: imagePath,\r\n  };\r\n};\r\nexport const addImageFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.ADD_IMAGE_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\nexport const editProductRequest = () => {\r\n  return <const>{\r\n    type: types.EDIT_PRODUCT_REQUEST,\r\n  };\r\n};\r\nexport const editProductSuccess = (product: Product) => {\r\n  return <const>{\r\n    type: types.EDIT_PRODUCT_SUCCESS,\r\n    payload: product,\r\n  };\r\n};\r\nexport const editProductFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.EDIT_PRODUCT_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\nexport const getProductDetailRequest = () => {\r\n  return <const>{\r\n    type: types.GET_PRODUCT_DETAIL_REQUEST,\r\n  };\r\n};\r\nexport const getProductDetailSuccess = (product: Product) => {\r\n  return <const>{\r\n    type: types.GET_PRODUCT_DETAIL_SUCCESS,\r\n    payload: product,\r\n  };\r\n};\r\nexport const getProductDetailFailure = (err: AxiosError) => {\r\n  return <const>{\r\n    type: types.GET_PRODUCT_DETAIL_FAILURE,\r\n    payload: err,\r\n  };\r\n};\r\nexport type GetProductsAction =\r\n  | GetProductsRequestAction\r\n  | GetProductsSuccessAction\r\n  | GetProductsFailureAction;\r\n\r\nexport type AddProductAction =\r\n  | ReturnType<typeof addProductRequest>\r\n  | ReturnType<typeof addProductSuccess>\r\n  | ReturnType<typeof addProductFailure>;\r\n\r\nexport type WillDeleteProductAction =\r\n  | ReturnType<typeof willDeleteProductRequest>\r\n  | ReturnType<typeof willDeleteProductSuccess>\r\n  | ReturnType<typeof willDeleteProductFailure>;\r\n\r\nexport type DeleteProductAction =\r\n  | ReturnType<typeof deleteProductRequest>\r\n  | ReturnType<typeof deleteProductSuccess>\r\n  | ReturnType<typeof deleteProductFailure>;\r\n\r\nexport type AddReviewAction =\r\n  | ReturnType<typeof addReviewRequest>\r\n  | ReturnType<typeof addReviewSuccess>\r\n  | ReturnType<typeof addReviewFailure>;\r\n\r\nexport type AddQuetionAction =\r\n  | ReturnType<typeof addQuestionRequest>\r\n  | ReturnType<typeof addQuestionSuccess>\r\n  | ReturnType<typeof addQuestionFailure>;\r\n\r\nexport type AddAnswerAction =\r\n  | ReturnType<typeof addAnswerRequest>\r\n  | ReturnType<typeof addAnswerSuccess>\r\n  | ReturnType<typeof addAnswerFailure>;\r\n\r\nexport type GetPrdQuestionListAction =\r\n  | ReturnType<typeof getPrdQuestionListRequest>\r\n  | ReturnType<typeof getPrdQuestionListSuccess>\r\n  | ReturnType<typeof getPrdQuestionListFailure>;\r\n\r\nexport type AddImageAction =\r\n  | ReturnType<typeof addImageRequest>\r\n  | ReturnType<typeof addImageSuccess>\r\n  | ReturnType<typeof addImageFailure>;\r\n\r\nexport type EditProductAction =\r\n  | ReturnType<typeof editProductRequest>\r\n  | ReturnType<typeof editProductSuccess>\r\n  | ReturnType<typeof editProductFailure>;\r\n\r\nexport type GetProductDetailAction =\r\n  | ReturnType<typeof getProductDetailRequest>\r\n  | ReturnType<typeof getProductDetailSuccess>\r\n  | ReturnType<typeof getProductDetailFailure>;\r\n\r\ntype ProductAction =\r\n  | GetProductsAction\r\n  | AddProductAction\r\n  | WillDeleteProductAction\r\n  | DeleteProductAction\r\n  | AddReviewAction\r\n  | AddQuetionAction\r\n  | AddAnswerAction\r\n  | GetPrdQuestionListAction\r\n  | AddImageAction\r\n  | EditProductAction\r\n  | GetProductDetailAction;\r\n\r\nexport default ProductAction;\r\n","import { types } from \"util\";\r\n\r\nexport const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUESR\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAILURE = \"GET_PRODUCTS_FAILURE\";\r\n\r\nexport const ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\r\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\r\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\r\n\r\nexport const WILL_DELETE_PRODUCT_REQUEST = \"WILL_DELETE_PRODUCT_REQUEST\";\r\nexport const WILL_DELETE_PRODUCT_SUCCESS = \"WILL_DELETE_PRODUCT_SUCCESS\";\r\nexport const WILL_DELETE_PRODUCT_FAILURE = \"WILL_DELETE_PRODUCT_FAILURE\";\r\n\r\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\";\r\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\r\nexport const DELETE_PRODUCT_FAILURE = \"DELETE_PRODUCT_FAILURE\";\r\n\r\nexport const ADD_REVIEW_REQUEST = \"ADD_REVIEW_REQUEST\";\r\nexport const ADD_REVIEW_SUCCESS = \"ADD_REVIEW_SUCCESS\";\r\nexport const ADD_REVIEW_FAILURE = \"ADD_REVIEW_FAILURE\";\r\n\r\nexport const ADD_QUESTION_REQUEST = \"ADD_QUESTION_REQUEST\";\r\nexport const ADD_QUESTION_SUCCESS = \"ADD_QUESTION_SUCCESS\";\r\nexport const ADD_QUESTION_FAILURE = \"ADD_QUESTION_FAILURE\";\r\n\r\nexport const ADD_ANSWER_REQUEST = \"ADD_ANSWER_REQUEST\";\r\nexport const ADD_ANSWER_SUCCESS = \"ADD_ANSWER_SUCCESS\";\r\nexport const ADD_ANSWER_FAILURE = \"ADD_ANSWER_FAILURE\";\r\n\r\nexport const GET_PRD_QUESTIONS_REQUEST = \"GET_PRD_QUESTIONS_REQUEST\";\r\nexport const GET_PRD_QUESTIONS_SUCCESS = \"GET_PRD_QUESTIONS_SUCCESS\";\r\nexport const GET_PRD_QUESTIONS_FAILURE = \"GET_PRD_QUESTIONS_FAILURE\";\r\n\r\nexport const ADD_IMAGE_REQUEST = \"ADD_IMAGE_REQUEST\";\r\nexport const ADD_IMAGE_SUCCESS = \"ADD_IMAGE_SUCCESS\";\r\nexport const ADD_IMAGE_FAILURE = \"ADD_IMAGE_FAILURE\";\r\n\r\nexport const EDIT_PRODUCT_REQUEST = \"EDIT_PRODUCT_REQUEST\";\r\nexport const EDIT_PRODUCT_SUCCESS = \"EDIT_PRODUCT_SUCCESS\";\r\nexport const EDIT_PRODUCT_FAILURE = \"EDIT_PRODUCT_FAILURE\";\r\n\r\nexport const GET_PRODUCT_DETAIL_REQUEST = \"GET_PRODUCT_DETAIL_REQUEST\";\r\nexport const GET_PRODUCT_DETAIL_SUCCESS = \"GET_PRODUCT_DETAIL_SUCCESS\";\r\nexport const GET_PRODUCT_DETAIL_FAILURE = \"GET_PRODUCT_DETAIL_FAILURE\";\r\n","import { ThunkAction } from \"redux-thunk\";\r\n\r\nimport { RootState } from \"../index\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  GetProductsAction,\r\n  AddProductAction,\r\n  addProductRequest,\r\n  addProductSuccess,\r\n  addProductFailure,\r\n  getProductsRequest,\r\n  getProductsSuccess,\r\n  getProductsFailure,\r\n  WillDeleteProductAction,\r\n  willDeleteProductRequest,\r\n  willDeleteProductSuccess,\r\n  willDeleteProductFailure,\r\n  deleteProductRequest,\r\n  deleteProductSuccess,\r\n  deleteProductFailure,\r\n  DeleteProductAction,\r\n  AddReviewAction,\r\n  addReviewRequest,\r\n  addReviewSuccess,\r\n  addReviewFailure,\r\n  AddQuetionAction,\r\n  addQuestionRequest,\r\n  addQuestionSuccess,\r\n  addQuestionFailure,\r\n  AddAnswerAction,\r\n  addAnswerFailure,\r\n  addAnswerRequest,\r\n  addAnswerSuccess,\r\n  GetPrdQuestionListAction,\r\n  getPrdQuestionListRequest,\r\n  getPrdQuestionListSuccess,\r\n  getPrdQuestionListFailure,\r\n  AddImageAction,\r\n  addImageRequest,\r\n  addImageSuccess,\r\n  addImageFailure,\r\n  EditProductAction,\r\n  editProductFailure,\r\n  editProductRequest,\r\n  editProductSuccess,\r\n} from \"./action\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getProductDetailFailure } from \"./action\";\r\nimport { BACK_URL } from \"../../Model/db\";\r\nimport {\r\n  GetProductDetailAction,\r\n  getProductDetailRequest,\r\n  getProductDetailSuccess,\r\n} from \"./action\";\r\nconst dbUrl = process.env.REACT_APP_DBURL;\r\n\r\nexport interface AddProductData {\r\n  name: string;\r\n  price: number;\r\n  stock: number;\r\n  imgUrls: { url: string; idx: string }[];\r\n  description?: string;\r\n  thumbnail?: string;\r\n}\r\n\r\nfunction getProductsAPI() {\r\n  return axios(dbUrl + \"/product\", { withCredentials: true });\r\n}\r\nasync function addProductsAPI(product: AddProductData) {\r\n  return axios.post(\r\n    dbUrl + \"/product/add\",\r\n    {\r\n      ...product,\r\n    },\r\n    { withCredentials: true }\r\n  );\r\n}\r\nfunction willDeleteAPI(pId: string) {\r\n  return axios(dbUrl + `/product/willdelete?productId:${pId}`);\r\n}\r\nfunction deleteAPI(pId: string) {\r\n  return axios(dbUrl + `/product/delete?productId:${pId}`);\r\n}\r\nconst checkServerConnet = (err: any) => {\r\n  if (!err.response) {\r\n    toast.error(\"Server Error Try rater\");\r\n  }\r\n};\r\n//getProducts 의 리턴벨류는\r\nexport function getProducts(): ThunkAction<\r\n  void,\r\n  RootState,\r\n  null,\r\n  GetProductsAction\r\n> {\r\n  return async (dispatch) => {\r\n    dispatch(getProductsRequest());\r\n    try {\r\n      const response = await getProductsAPI();\r\n      dispatch(getProductsSuccess(response.data));\r\n    } catch (err) {\r\n      dispatch(getProductsFailure(err));\r\n      checkServerConnet(err);\r\n      throw err;\r\n    }\r\n  };\r\n}\r\n\r\nexport function addProduct(\r\n  product: AddProductData\r\n): ThunkAction<void, RootState, null, AddProductAction> {\r\n  return async (dispatch) => {\r\n    dispatch(addProductRequest());\r\n    try {\r\n      const response = await addProductsAPI(product);\r\n      dispatch(addProductSuccess(response.data));\r\n    } catch (err) {\r\n      dispatch(addProductFailure(err));\r\n      checkServerConnet(err);\r\n      console.dir(err);\r\n      throw err;\r\n    }\r\n  };\r\n}\r\nexport function willDeleteProduct(\r\n  pid: string\r\n): ThunkAction<void, RootState, null, WillDeleteProductAction> {\r\n  return async (dispatch) => {\r\n    dispatch(willDeleteProductRequest());\r\n    try {\r\n      await willDeleteAPI(pid);\r\n      dispatch(willDeleteProductSuccess());\r\n    } catch (err) {\r\n      dispatch(willDeleteProductFailure(err));\r\n      checkServerConnet(err);\r\n\r\n      throw err;\r\n    }\r\n  };\r\n}\r\n\r\nexport function deleteProduct(\r\n  pid: string\r\n): ThunkAction<void, RootState, null, DeleteProductAction> {\r\n  return async (dispatch) => {\r\n    dispatch(deleteProductRequest());\r\n    try {\r\n      await deleteAPI(pid);\r\n      dispatch(deleteProductSuccess());\r\n    } catch (err) {\r\n      dispatch(deleteProductFailure(err));\r\n      checkServerConnet(err);\r\n\r\n      throw err;\r\n    }\r\n  };\r\n}\r\n\r\nconst addReviewAPI = (param: any) => {\r\n  return axios.post(\r\n    dbUrl + \"/review/add\",\r\n    { ...param },\r\n    { withCredentials: true }\r\n  );\r\n};\r\nexport const addReview = (\r\n  param: any\r\n): ThunkAction<void, RootState, null, AddReviewAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(addReviewRequest());\r\n    try {\r\n      const response = await addReviewAPI(param);\r\n      dispatch(addReviewSuccess(response.data));\r\n    } catch (err) {\r\n      dispatch(addReviewFailure(err));\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst addQuestionAPI = (param: any) => {\r\n  return axios.post(\r\n    dbUrl + \"/qna/addQuestion\",\r\n    { ...param },\r\n    { withCredentials: true }\r\n  );\r\n};\r\nexport const addQuestion = (\r\n  param: any\r\n): ThunkAction<void, RootState, null, AddQuetionAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(addQuestionRequest());\r\n    try {\r\n      const response = await addQuestionAPI(param);\r\n      dispatch(addQuestionSuccess(response.data));\r\n    } catch (err) {\r\n      dispatch(addQuestionFailure(err));\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nconst addAnswerAPI = (param: AddAnswerParam) => {\r\n  return axios.post(\r\n    dbUrl + \"/qna/addAnswer\",\r\n    { ...param },\r\n    { withCredentials: true }\r\n  );\r\n};\r\n//content,qId,productId\r\ninterface AddAnswerParam {\r\n  content: string;\r\n  qId: string;\r\n  productId: string;\r\n}\r\nexport const addAnswer = (\r\n  param: AddAnswerParam\r\n): ThunkAction<void, RootState, null, AddAnswerAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(addAnswerRequest());\r\n    try {\r\n      const response = await addAnswerAPI(param);\r\n      dispatch(addAnswerSuccess(response.data));\r\n    } catch (err) {\r\n      console.log(\"error\", err);\r\n\r\n      dispatch(addAnswerFailure(err));\r\n      return;\r\n    }\r\n  };\r\n};\r\nconst getPrdQueAPI = (productId: string) => {\r\n  return axios.get(dbUrl + `/qna/product/getquestion?productId=${productId}`);\r\n};\r\nexport const getPrdQueList = (\r\n  productId: string\r\n): ThunkAction<void, RootState, null, GetPrdQuestionListAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(getPrdQuestionListRequest());\r\n    try {\r\n      const response = await getPrdQueAPI(productId);\r\n\r\n      dispatch(getPrdQuestionListSuccess(response.data));\r\n    } catch (err) {\r\n      console.log(\"error\", err);\r\n      dispatch(getPrdQuestionListFailure(err));\r\n      return;\r\n    }\r\n  };\r\n};\r\n\r\nconst addImageAPI = (form: FormData, idx: string) => {\r\n  // const keys = form.keys();\r\n  // const values = form.values();\r\n  // for(let v of  Array.from(keys)){\r\n  //   console.log(v);\r\n  // }\r\n  // for(let v of  Array.from(values)){\r\n  //   console.log(v);\r\n  // }\r\n  return axios.post(dbUrl + `/image/add/${idx}`, form, {\r\n    withCredentials: true,\r\n  });\r\n};\r\nexport const addImage = (\r\n  form: FormData,\r\n  idx: string\r\n): ThunkAction<void, RootState, null, AddImageAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(addImageRequest());\r\n    try {\r\n      const response = await addImageAPI(form, idx);\r\n\r\n      dispatch(addImageSuccess(response.data));\r\n    } catch (err) {\r\n      console.log(\"error\", err);\r\n      dispatch(addImageFailure(err));\r\n    }\r\n  };\r\n};\r\n\r\ninterface EditProductFrom {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  stock: number;\r\n}\r\nconst editProductAPI = (product: EditProductFrom) => {\r\n  return axios.post(\r\n    dbUrl + `/product/edit`,\r\n    { ...product },\r\n    { withCredentials: true }\r\n  );\r\n};\r\nexport const editProduct = (\r\n  product: EditProductFrom\r\n): ThunkAction<void, RootState, null, EditProductAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(editProductRequest());\r\n    try {\r\n      const response = await editProductAPI(product);\r\n\r\n      dispatch(editProductSuccess(response.data));\r\n      toast.success(\"수정 성공\");\r\n    } catch (err) {\r\n      console.log(\"error\", err);\r\n      dispatch(editProductFailure(err));\r\n      toast.success(\"수정 실패\");\r\n    }\r\n  };\r\n};\r\nconst getProductDetailAPI = (productIndex: string) => {\r\n  return axios.get(BACK_URL + `/product/detail?productId=${productIndex}`);\r\n};\r\nexport const getProductDetail = (\r\n  productIndex: string\r\n): ThunkAction<void, RootState, null, GetProductDetailAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(getProductDetailRequest());\r\n    try {\r\n      const response = await getProductDetailAPI(productIndex);\r\n\r\n      dispatch(getProductDetailSuccess(response.data));\r\n    } catch (err) {\r\n      console.log(\"error\", err);\r\n      dispatch(getProductDetailFailure(err));\r\n    }\r\n  };\r\n};\r\n","export const BACK_URL = process.env.REACT_APP_DBURL;\r\nexport interface User {\r\n  id: string;\r\n  userId: string;\r\n  name: string;\r\n  point: number;\r\n  email?: string;\r\n  phone?: string;\r\n  isAdmin: boolean;\r\n  createdAt: number;\r\n  basket: Basket;\r\n}\r\nexport interface Basket {\r\n  id: string;\r\n  products: Product[];\r\n  userId: string;\r\n}\r\n//product 안에 리뷰와 질문 포함\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  stock: number;\r\n  productImage: Image[];\r\n  description: string;\r\n  thumbnail?: string;\r\n  willDelete?: boolean;\r\n  createdAt?: number;\r\n  qnas: Qna[];\r\n  reviews: Review[];\r\n}\r\nexport interface Image {\r\n  id: string;\r\n  url: string;\r\n}\r\nexport interface Address {\r\n  address: string;\r\n  additional?: string;\r\n  zipcode: string;\r\n}\r\nexport interface Review {\r\n  id: string;\r\n  content: string;\r\n  rating: number;\r\n  image?: string;\r\n  orderId: string;\r\n  productId: string;\r\n}\r\n\r\nexport interface Qna {\r\n  id: string;\r\n  content: string;\r\n  user: User;\r\n  product: {\r\n    id: string;\r\n  };\r\n  answer?: Qna;\r\n  question?: Qna;\r\n  createdAt: string;\r\n  userId: string;\r\n}\r\ninterface ProductInOrder extends Product {\r\n  existReview: boolean;\r\n  count: number;\r\n}\r\nexport interface Order {\r\n  id: string;\r\n  products: ProductInOrder[];\r\n  name: string;\r\n  address1: string;\r\n  address2: string;\r\n  zipcode: string;\r\n  phone: string;\r\n  message?: string;\r\n  orderNumber: string;\r\n  createdAt: string;\r\n  user?: {\r\n    userId: string;\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ProductCard from \"../Components/ProductCard\";\r\nimport { getProducts } from \"../Redux/Product/thunk\";\r\nimport { Product } from \"../Model/db\";\r\nimport { RootState } from \"../Redux/index\";\r\n\r\nconst ProductCardContainer = styled.div`\r\n  width: 300px;\r\n`;\r\nconst Container = styled.div``;\r\nconst ProductList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nconst Text = styled.p`\r\n  margin-top: 20px;\r\n`;\r\n\r\n//렌더링시에 서버에서 제품목록을 가져와서 보여준다\r\nexport default function Home() {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state: RootState) => state.product.products);\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Text>제품들</Text>\r\n      <ProductList>\r\n        {productList.map((product: Product, i) => {\r\n          return (\r\n            <ProductCardContainer key={i}>\r\n              <ProductCard product={product} />\r\n            </ProductCardContainer>\r\n          );\r\n        })}\r\n      </ProductList>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nexport interface UseInputStr {\r\n  value: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  setValue: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\nexport const useInputStr2 = (defaultValue: string) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setValue(value);\r\n  };\r\n  return { value, onChange };\r\n};\r\nexport const useInputStr = (defaultValue: string) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setValue(value);\r\n  };\r\n  return { value, onChange, setValue };\r\n};\r\n\r\nexport const useInputNum = (defaultValue: string) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (value === \"\") {\r\n      return setValue(value);\r\n    }\r\n    const isNum = Number(value);\r\n    if (isNum) {\r\n      setValue(value);\r\n    } else {\r\n      toast.error(\"enter only number \");\r\n    }\r\n  };\r\n  return { value, onChange, setValue };\r\n};\r\nexport const useInputNum2 = (defaultValue: string) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (value === \"\") {\r\n      return setValue(value);\r\n    }\r\n    const isNum = Number(value);\r\n    if (isNum) {\r\n      setValue(value);\r\n    } else {\r\n      toast.error(\"enter only number \");\r\n    }\r\n  };\r\n  return { value, onChange };\r\n};\r\nexport const useInputNumMaxLen = (defaultValue: string, maxlen: number) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (value === \"\") {\r\n      return setValue(value);\r\n    }\r\n    if (value.length > maxlen) {\r\n      return toast.error(`enter only ${maxlen} number `);\r\n    }\r\n    const isNum = Number(value);\r\n    if (isNum >= 0) {\r\n      setValue(value);\r\n    } else {\r\n      toast.error(\"enter only number \");\r\n    }\r\n  };\r\n  return { value, onChange };\r\n};\r\n\r\nexport const useInput = (defaultValue: any) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n  };\r\n  return { value, onChange, setValue };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  addProduct,\r\n  AddProductData,\r\n  addImage,\r\n  editProduct,\r\n} from \"../Redux/Product/thunk\";\r\nimport { useInputNum, useInputStr } from \"../Hooks/useInput\";\r\nimport { Product } from \"../Model/db\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Column = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  &:not(:last-child) {\r\n    margin-bottom: 7px;\r\n  }\r\n  input {\r\n    height: 30px;\r\n    width: 70%;\r\n    min-width: 100px;\r\n  }\r\n  div {\r\n    width: 120px;\r\n  }\r\n`;\r\nconst Form = styled.div`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  width: 50vw;\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  product: Product | undefined;\r\n}\r\n\r\nexport default function AddProduct(props: Props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { product } = props;\r\n  const [name, setName] = useState(\"\");\r\n  const onChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const elem = e.target as HTMLInputElement;\r\n    setName(elem.value);\r\n  };\r\n  const {\r\n    value: price,\r\n    setValue: setPrice,\r\n    onChange: onChangePrice,\r\n  } = useInputNum(\"\"); //숫자만 넣을수 있는 input\r\n  const {\r\n    value: stock,\r\n    setValue: setStock,\r\n    onChange: onChangeStock,\r\n  } = useInputNum(\"\");\r\n  const {\r\n    value: description,\r\n    setValue: setDescription,\r\n    onChange: onChangeDescription,\r\n  } = useInputStr(\"\");\r\n\r\n  const [imgUrls, setimgUrls] = useState<Array<{ url: string; idx: string }>>([\r\n    { url: \"\", idx: \"\" }, //삼품이미지\r\n    { url: \"\", idx: \"\" }, //썸네일\r\n  ]);\r\n  const imgList = useSelector((state: RootState) => state.product.imagesPath);\r\n\r\n  useEffect(() => {\r\n    //product 가 undifined 가 아닌 값이 매개변수에 있으면\r\n    //product 를 수정하는 폼이다.\r\n    //사진은 수정불가\r\n    if (product) {\r\n      setName(product.name);\r\n      setPrice(product.price.toString());\r\n      setStock(product.stock.toString());\r\n      setDescription(product.description);\r\n    }\r\n  }, []);\r\n\r\n  const onThumbnail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      const image = e.target.files[0];\r\n      const formData = new FormData();\r\n      formData.append(\"image\", image);\r\n      dispatch(addImage(formData, \"0\"));\r\n    }\r\n  };\r\n  //사진을 불러오면 일단 s3에 저장을 한다.\r\n  //그리고 redux product 에 이미지의 주소를 저장하고\r\n  //useSelector 로 이미지의 주소를 가져와서\r\n  //아래의 useEffect 코드로 컴포넌트의 state인 imgUrls 에 저장한다.\r\n  //form 이 submit 될때 같이 보낸다\r\n  useEffect(() => {\r\n    const newArr = [...imgUrls];\r\n    imgList.forEach((img) => {\r\n      newArr[Number(img.idx)] = img;\r\n    });\r\n    setimgUrls(newArr);\r\n  }, [imgList]);\r\n\r\n  const addImgUrl = () => {\r\n    setimgUrls([...imgUrls, { url: \"\", idx: \"\" }]);\r\n  }; //제품 사진을 추가하게 input 을 늘린다.\r\n  const onChangeUrl = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      const image = e.target.files[0];\r\n      const formData = new FormData();\r\n      formData.append(\"image\", image);\r\n      dispatch(addImage(formData, e.target.id));\r\n    }\r\n  }; //사진을 불러오면 일단 s3에 저장을 한다.\r\n\r\n  const submitForm = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!product) {\r\n      for (let i = 1; i < imgUrls.length; ++i) {\r\n        if (imgUrls[i].url === \"\") {\r\n          toast.error(\"잠시후에 시도해주세요\");\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    const productForm: AddProductData = {\r\n      name,\r\n      price: Number(price),\r\n      stock: Number(stock),\r\n      imgUrls,\r\n      description,\r\n    };\r\n    if (product) {\r\n      await dispatch(\r\n        editProduct({\r\n          id: product.id,\r\n          name,\r\n          price: Number(price),\r\n          stock: Number(stock),\r\n        })\r\n      );\r\n    } else {\r\n      await dispatch(addProduct(productForm));\r\n    }\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        ADD PRODUCT\r\n        <Form>\r\n          <form encType=\"multipart/form-data\" onSubmit={submitForm}>\r\n            <div>\r\n              <Column>\r\n                <div>상품이름: </div>\r\n                <input\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={onChangeName}\r\n                  placeholder=\"Enter Product Name\"\r\n                  required={true}\r\n                ></input>\r\n              </Column>\r\n              <Column>\r\n                <div>상품 가격 : </div>\r\n                <input\r\n                  id=\"price\"\r\n                  value={price}\r\n                  onChange={onChangePrice}\r\n                  placeholder=\"Enter Price\"\r\n                  required={true}\r\n                ></input>\r\n              </Column>\r\n\r\n              <Column>\r\n                <div>상품 제고 : </div>\r\n\r\n                <input\r\n                  id=\"stock\"\r\n                  value={stock}\r\n                  onChange={onChangeStock}\r\n                  placeholder=\"Enter stock\"\r\n                  required={true}\r\n                ></input>\r\n              </Column>\r\n\r\n              <Column>\r\n                <div>상품 설명 : </div>\r\n\r\n                <input\r\n                  id=\"description\"\r\n                  value={description}\r\n                  onChange={onChangeDescription}\r\n                  placeholder=\"Enter description\"\r\n                ></input>\r\n              </Column>\r\n\r\n              {!product && (\r\n                <>\r\n                  {imgUrls.map((imgUrl, i) => {\r\n                    if (i == 0) {\r\n                      return;\r\n                    }\r\n                    return (\r\n                      <Column key={i}>\r\n                        <div>이미지 {`${i}번`}: </div>\r\n                        <input\r\n                          type=\"file\"\r\n                          id={i.toString()}\r\n                          //  value={imgUrl.url}\r\n                          onChange={onChangeUrl}\r\n                          placeholder={`Enter imageUrl ${i}`}\r\n                          required={true}\r\n                          accept=\"image/*\"\r\n                        ></input>\r\n                        {i == 1 && <p onClick={addImgUrl}>➕</p>}\r\n                      </Column>\r\n                    );\r\n                  })}\r\n\r\n                  <Column>\r\n                    <div>썸네일 : </div>\r\n\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"thumnail\"\r\n                      onChange={onThumbnail}\r\n                      placeholder=\"Enter thumnail\"\r\n                      required={false}\r\n                      accept=\"image/*\"\r\n                    ></input>\r\n                  </Column>\r\n                </>\r\n              )}\r\n              <button>submit</button>\r\n            </div>\r\n          </form>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nconst theme: DefaultTheme = {\r\n  basicWidth: \"320px\",\r\n\r\n  colors: {\r\n    main: \"#FAFAFA\",\r\n    secondary: \"#fff\",\r\n  },\r\n};\r\n\r\nexport { theme };\r\n","// global-style.ts\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { reset } from \"styled-reset\";\r\n\r\n// 외부에서 import 할거니까 모듈 내보내자~!\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n        box-sizing:border-box;\r\n    }\r\n  body{\r\n    background-color:${(props) => props.theme.colors.main};\r\n  }\r\n  /* 그밖에 글로벌 스타일 작성하기  */\r\n`;\r\n","import * as types from \"./types\";\r\nimport { createAsyncAction } from \"typesafe-actions\";\r\nimport { User, Product, Order, Review } from \"../../Model/db\";\r\nimport { AxiosError } from \"axios\";\r\n\r\ninterface UserAndCart {\r\n  user: User;\r\n  cart: Product[];\r\n}\r\ninterface ReturnOrderSuccess {\r\n  order: Order;\r\n  remainCash: number;\r\n}\r\nexport interface CheckIdData {\r\n  message: string;\r\n  possible: boolean;\r\n}\r\nexport const getProfileAction = createAsyncAction(\r\n  types.GET_PROFILE_REQUEST,\r\n  types.GET_PROFILE_SUCCESS,\r\n  types.GET_PROFILE_FAILURE\r\n)<null, UserAndCart, AxiosError>();\r\n\r\nexport const getUserAction = createAsyncAction(\r\n  types.GET_USERS_REQUEST,\r\n  types.GET_USERS_SUCCESS,\r\n  types.GET_USERS_FAILURE\r\n)<null, User, AxiosError>();\r\n\r\nexport const loginAction = createAsyncAction(\r\n  types.LOG_IN_REQUEST,\r\n  types.LOG_IN_SUCCESS,\r\n  types.LOG_IN_FAILURE\r\n)<null, UserAndCart, AxiosError>();\r\n\r\nexport const logoutAction = createAsyncAction(\r\n  types.LOG_OUT_REQUEST,\r\n  types.LOG_OUT_SUCCESS,\r\n  types.LOG_OUT_FAILURE\r\n)<null, null, AxiosError>();\r\n\r\nexport const signUpAction = createAsyncAction(\r\n  types.SIGN_UP_REQUEST,\r\n  types.SIGN_UP_SUCCESS,\r\n  types.SIGN_UP_FAILURE\r\n)<null, boolean, AxiosError>();\r\n\r\nexport const checkIdAction = createAsyncAction(\r\n  types.CHECK_ID_REQUEST,\r\n  types.CHECK_ID_SUCCESS,\r\n  types.CHECK_ID_FAILURE\r\n)<null, CheckIdData, AxiosError>();\r\n\r\nexport const editProfileAction = createAsyncAction(\r\n  types.EDIT_PROFILE_REQUEST,\r\n  types.EDIT_PROFILE_SUCCESS,\r\n  types.EDIT_PROFILE_FAILURE\r\n)<null, User, AxiosError>();\r\n\r\nexport const addCartAction = createAsyncAction(\r\n  types.ADD_CART_REQUEST,\r\n  types.ADD_CART_SUCCESS,\r\n  types.ADD_CART_FAILURE\r\n)<null, Product | null, AxiosError>();\r\n\r\nexport const deleteCartAction = createAsyncAction(\r\n  types.DELETE_CART_REQUEST,\r\n  types.DELETE_CART_SUCCESS,\r\n  types.DELETE_CART_FAILURE\r\n)<null, Product[], AxiosError>();\r\n\r\nexport const addOrderAction = createAsyncAction(\r\n  types.ADD_ORDER_REQUEST,\r\n  types.ADD_ORDER_SUCCESS,\r\n  types.ADD_ORDER_FAILURE\r\n)<null, ReturnOrderSuccess, AxiosError>();\r\n\r\nexport const chargeCashAction = createAsyncAction(\r\n  types.CHARGE_CASH_REQUEST,\r\n  types.CHARGE_CASH_SUCCESS,\r\n  types.CHARGE_CASH_FAILURE\r\n)<null, number, AxiosError>();\r\n\r\nexport const getOrdersAction = createAsyncAction(\r\n  types.GET_ORDERS_REQUEST,\r\n  types.GET_ORDERS_SUCCESS,\r\n  types.GET_ORDERS_FAILURE\r\n)<null, Order[], AxiosError>();\r\n\r\nexport const addReviewAction = createAsyncAction(\r\n  types.ADD_REVIEW_REQUEST,\r\n  types.ADD_REVIEW_SUCCESS,\r\n  types.ADD_REVIEW_FAILURE\r\n)<null, Review, AxiosError>();\r\n\r\nexport const emptyCartAction = createAsyncAction(\r\n  types.EMPTY_CART_REQUEST,\r\n  types.EMPTY_CART_SUCCESS,\r\n  types.EMPTY_CART_FAILURE\r\n)<null, [], AxiosError>();\r\n","import { ActionType } from \"typesafe-actions\";\r\nimport * as actions from \"./action\";\r\nexport type UserAction = ActionType<typeof actions>;\r\n\r\nexport const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\n\r\nexport const GET_PROFILE_REQUEST = \"GET_PROFILE_REQUEST\";\r\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\r\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHECK_ID_REQUEST = \"CHECK_ID_REQUEST\";\r\nexport const CHECK_ID_SUCCESS = \"CHECK_ID_SUCCESS\";\r\nexport const CHECK_ID_FAILURE = \"CHECK_ID_FAILURE\";\r\n\r\nexport const EDIT_PROFILE_REQUEST = \"EDIT_PROFILE_REQUEST\";\r\nexport const EDIT_PROFILE_SUCCESS = \"EDIT_PROFILE_SUCCESS\";\r\nexport const EDIT_PROFILE_FAILURE = \"EDIT_PROFILE_FAILURE\";\r\n\r\nexport const ADD_CART_REQUEST = \"ADD_CART_REQUEST\";\r\nexport const ADD_CART_SUCCESS = \"ADD_CART_SUCCESS\";\r\nexport const ADD_CART_FAILURE = \"ADD_CART_FAILURE\";\r\n\r\nexport const DELETE_CART_REQUEST = \"DELETE_CART_REQUEST\";\r\nexport const DELETE_CART_SUCCESS = \"DELETE_CART_SUCCESS\";\r\nexport const DELETE_CART_FAILURE = \"DELETE_CART_FAILURE\";\r\n\r\nexport const ADD_ORDER_REQUEST = \"ADD_ORDER_REQUEST\";\r\nexport const ADD_ORDER_SUCCESS = \"ADD_ORDER_SUCCESS\";\r\nexport const ADD_ORDER_FAILURE = \"ADD_ORDER_FAILURE\";\r\n\r\nexport const CHARGE_CASH_REQUEST = \"CHARGE_CASH_REQUEST\";\r\nexport const CHARGE_CASH_SUCCESS = \"CHARGE_CASH_SUCCESS\";\r\nexport const CHARGE_CASH_FAILURE = \"CHARGE_CASH_FAILURE\";\r\n\r\nexport const GET_ORDERS_REQUEST = \"GET_ORDERS_REQUEST\";\r\nexport const GET_ORDERS_SUCCESS = \"GET_ORDERS_SUCCESS\";\r\nexport const GET_ORDERS_FAILURE = \"GET_ORDERS_FAILURE\";\r\n\r\nexport const ADD_REVIEW_REQUEST = \"ADD_REVIEW_REQUEST\";\r\nexport const ADD_REVIEW_SUCCESS = \"ADD_REVIEW_SUCCESS\";\r\nexport const ADD_REVIEW_FAILURE = \"ADD_REVIEW_FAILURE\";\r\n\r\nexport const EMPTY_CART_REQUEST = \"EMPTY_CART_REQUEST\";\r\nexport const EMPTY_CART_SUCCESS = \"EMPTY_CART_SUCCESS\";\r\nexport const EMPTY_CART_FAILURE = \"EMPTY_CART_FAILURE\";\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"../index\";\r\nimport {\r\n  signUpAction,\r\n  getUserAction,\r\n  loginAction,\r\n  checkIdAction,\r\n  addCartAction,\r\n  deleteCartAction,\r\n  logoutAction,\r\n  editProfileAction,\r\n  getProfileAction,\r\n  addOrderAction,\r\n  chargeCashAction,\r\n  getOrdersAction,\r\n  emptyCartAction,\r\n  addReviewAction,\r\n} from \"./action\";\r\nimport { UserAction } from \"./types\";\r\nimport { User } from \"../../Model/db\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport baseurl from \"../../baseurl\";\r\nconst dbUrl = process.env.REACT_APP_DBURL;\r\n\r\nexport interface LoginData {\r\n  userId: string;\r\n  password: string;\r\n}\r\nexport interface SignUpData {\r\n  userId: string;\r\n  name: string;\r\n  password: string;\r\n  email?: string;\r\n  phone?: string;\r\n}\r\ntype Props = RouteComponentProps;\r\n\r\nconst getUserAPI = (id: string) => {\r\n  return axios.get(dbUrl + `/user/?id=${id}`);\r\n};\r\nconst logInAPI = (param: LoginData) => {\r\n  return axios.post(\r\n    dbUrl + \"/user/login\",\r\n    { ...param },\r\n    { withCredentials: true }\r\n  );\r\n};\r\nconst logOutAPI = () => {\r\n  return axios.post(dbUrl + \"/user/logout\", {}, { withCredentials: true });\r\n};\r\nconst sighUpAPI = (param: SignUpData) => {\r\n  return axios.post(dbUrl + \"/user/join\", { ...param });\r\n};\r\nexport const checkIdAPI = (id: string) => {\r\n  return axios.get(dbUrl + `/user/checkId?userId=${id}`);\r\n};\r\nconst editProfileAPI = (param: User) => {\r\n  return axios.post(dbUrl + \"/user/editProfile\", { ...param });\r\n};\r\nconst addCartAPI = (productId: string) => {\r\n  return axios.post(\r\n    dbUrl + \"/basket/add\",\r\n    { productId },\r\n    { withCredentials: true }\r\n  );\r\n};\r\nconst deleteCartAPI = (productId: string) => {\r\n  return axios.post(\r\n    dbUrl + \"/basket/delete\",\r\n    { productId },\r\n    { withCredentials: true }\r\n  );\r\n};\r\nconst getProfileAPI = () => {\r\n  return axios.get(dbUrl + \"/user/profile\", { withCredentials: true });\r\n};\r\nexport function getProfile(): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = getProfileAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await getProfileAPI();\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\nexport function getUser(\r\n  id: string\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = getUserAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await getUserAPI(id);\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\n\r\nexport function logIn(\r\n  param: LoginData,\r\n  props: Props\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = loginAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await logInAPI(param);\r\n\r\n      dispatch(success(response.data));\r\n      props.history.push(`${baseurl}/`);\r\n    } catch (e) {\r\n      if (e.response && e.response.data && e.response.data.error) {\r\n        toast.error(e.response.data.error.message);\r\n      }\r\n\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\nexport function logOut(\r\n  props: Props\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = logoutAction;\r\n    dispatch(request(null));\r\n    try {\r\n      await logOutAPI();\r\n      dispatch(success(null));\r\n      props.history.push(`${baseurl}/`);\r\n    } catch (e) {\r\n      console.dir(e);\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\nexport function signUp(\r\n  param: SignUpData,\r\n  props: Props\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = signUpAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await sighUpAPI(param);\r\n      dispatch(success(response.data));\r\n      props.history.push(`${baseurl}/login`);\r\n      toast.success(\"회원가입성공!  로그인 해주세요\");\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\n//직접 history 를 넘겼을`${baseurl}` 타입에러의 이유는????\r\nexport function checkId(\r\n  id: string\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = checkIdAction;\r\n    dispatch(request(null)); // 파라미터를 비우면 타입 에러가 나기 때문에 undefined 전달\r\n    try {\r\n      const response = await checkIdAPI(id);\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\nexport function editProfile(\r\n  param: User\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = editProfileAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await editProfileAPI(param);\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\n\r\nexport function addCart(\r\n  productId: string\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = addCartAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await addCartAPI(productId);\r\n      dispatch(success(response.data));\r\n      toast.info(\"장바구니 담기 성공\");\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n      toast.error(\"try rater\");\r\n    }\r\n  };\r\n}\r\nexport function deleteCart(\r\n  productId: string\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = deleteCartAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await deleteCartAPI(productId);\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n      toast.error(\"try rater\");\r\n    }\r\n  };\r\n}\r\n\r\ninterface addOrderParam {\r\n  productIdAndCount: {\r\n    id: string;\r\n    count: number;\r\n  }[];\r\n  cash: number;\r\n  address1: string;\r\n  address2: string;\r\n  zipcode: string;\r\n  name: string;\r\n  message: string;\r\n  phone: string;\r\n}\r\nconst addOrderAPI = (param: addOrderParam) => {\r\n  return axios.post(dbUrl + \"/order/add\", param, { withCredentials: true });\r\n};\r\nexport function addOrder(\r\n  param: addOrderParam,\r\n  props: RouteComponentProps\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = addOrderAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await addOrderAPI(param);\r\n      dispatch(success(response.data));\r\n      toast.success(\"주문 성공\");\r\n      props.history.push(`${baseurl}/`);\r\n      dispatch(emptyCart());\r\n    } catch (e) {\r\n      console.dir(e);\r\n      if (e.response) {\r\n        if (e.response.data) {\r\n          toast.error(e.response.data);\r\n          setTimeout(() => {\r\n            props.history.push(`${baseurl}/`);\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        dispatch(failure(e));\r\n        throw Error;\r\n      }\r\n\r\n      //재고 수량 반영 해보기\r\n    }\r\n  };\r\n}\r\nconst chargeCashAPI = (cash: number) => {\r\n  return axios.post(\r\n    dbUrl + \"/user/chargeCash\",\r\n    { cash },\r\n    { withCredentials: true }\r\n  );\r\n};\r\nexport function chargeCash(\r\n  cash: number\r\n): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = chargeCashAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await chargeCashAPI(cash);\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n      toast.error(\"충전실패 \");\r\n    }\r\n  };\r\n}\r\nconst getOrdersAPI = () => {\r\n  return axios.get(dbUrl + \"/order/\", { withCredentials: true });\r\n};\r\nexport function getOrder(): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = getOrdersAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await getOrdersAPI();\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\n\r\ninterface AddReviewParam {\r\n  productId: string;\r\n  OrderId: string;\r\n}\r\n// const addReviewAPI = (param: AddReviewParam) => {\r\n//   return axios.get(dbUrl + \"/review/add\", { withCredentials: true });\r\n// };\r\n// export function addReview(\r\n//   param: AddReviewParam\r\n// ): ThunkAction<void, RootState, null, UserAction> {\r\n//   return async (dispatch) => {\r\n//     const { request, success, failure } = addReviewAction;\r\n//     dispatch(request(null));\r\n//     try {\r\n//       const response = await addReviewAPI(param);\r\n//       dispatch(success(response.data));\r\n//     } catch (e) {\r\n//       dispatch(failure(e));\r\n//     }\r\n//   };\r\n// }\r\n\r\nconst emptyCartAPI = async () => {\r\n  return axios.post(dbUrl + \"/basket/empty\", {}, { withCredentials: true });\r\n};\r\nexport function emptyCart(): ThunkAction<void, RootState, null, UserAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = emptyCartAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await emptyCartAPI();\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useInputStr } from \"../Hooks/useInput\";\r\nimport { logIn } from \"../Redux/User/thunk\";\r\nimport Input from \"../Components/Input\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Form = styled.div`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  width: 50vw;\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    input {\r\n      height: 30px;\r\n      width: 100%;\r\n      min-width: 100px;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\ntype Props = RouteComponentProps;\r\nexport default function Login(props: Props) {\r\n  const dispatch = useDispatch();\r\n  const { value: userId, onChange: onUserId } = useInputStr(\"\");\r\n  const { value: password, onChange: onPassword } = useInputStr(\"\");\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ userId, password }, props));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      LOGIN\r\n      <Form>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            id=\"userId\"\r\n            value={userId}\r\n            onChange={onUserId}\r\n            placeholder=\"Enter id\"\r\n            required={true}\r\n          ></input>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={onPassword}\r\n            placeholder=\"Enter password\"\r\n            required={true}\r\n          ></input>\r\n          <button>submit</button>\r\n        </form>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n","\r\n\r\nconst baseurl = process.env.REACT_APP_BASEURL?process.env.REACT_APP_BASEURL:'';\r\nexport default baseurl;","import React from \"react\";\r\n\r\nexport interface InputProp {\r\n  type?: string;\r\n  value: string;\r\n  onChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;\r\n  required?: boolean;\r\n  readOnly?: boolean;\r\n  placeholder?: string;\r\n}\r\nexport default function Input({ inputProp }: { inputProp: InputProp }) {\r\n  const inputprops: InputProp = {\r\n    type: inputProp.type ? inputProp.type : \"text\",\r\n    value: inputProp.value,\r\n    onChange: inputProp.onChange ? inputProp.onChange : undefined,\r\n    readOnly: inputProp.readOnly ? inputProp.readOnly : false,\r\n    placeholder: inputProp.placeholder,\r\n  };\r\n\r\n  if (inputProp.required) {\r\n    //true  일떄만\r\n    inputprops.required = inputProp.required;\r\n  } else {\r\n    //false null\r\n    if (inputProp.required === undefined) {\r\n      inputprops.required = true;\r\n    }\r\n  }\r\n\r\n  return <input {...inputprops}></input>;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport { useInputStr } from \"../Hooks/useInput\";\r\nimport { signUp, SignUpData, checkId, checkIdAPI } from \"../Redux/User/thunk\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport Input from \"../Components/Input\";\r\nconst Container = styled.div`\r\n  margin-top: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Line = styled.div`\r\n  height: 1.5px;\r\n  width: 100%;\r\n  background-color: black;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Text = styled.p`\r\n  font-size: 0.8em;\r\n  padding-bottom: 10px;\r\n`;\r\nconst Form = styled.div`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  width: 50vw;\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    input {\r\n      height: 30px;\r\n      width: 100%;\r\n      min-width: 100px;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\ntype Props = RouteComponentProps;\r\nexport default function SignUp(props: Props) {\r\n  const checkIdState = useSelector((state: RootState) => state.user.checkId);\r\n  const dispatch = useDispatch();\r\n  const userId = useInputStr(\"\");\r\n  const name = useInputStr(\"\");\r\n  const password = useInputStr(\"\");\r\n  const passwordCheck = useInputStr(\"\");\r\n  const email = useInputStr(\"\");\r\n  const phone = useInputStr(\"\");\r\n\r\n  useEffect(() => {\r\n    if (checkIdState.possible) {\r\n      requestSignup();\r\n    } else if (checkIdState.message) {\r\n      toast.error(checkIdState.message);\r\n    }\r\n  }, [checkIdState]);\r\n\r\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (password.value !== passwordCheck.value) {\r\n      toast.error(\"check your password\");\r\n      return;\r\n    }\r\n    dispatch(checkId(userId.value));\r\n    //중복된 아이디가 없는지 확인\r\n  };\r\n  const requestSignup = () => {\r\n    const newUser: SignUpData = {\r\n      userId: userId.value,\r\n      name: name.value,\r\n      password: password.value,\r\n    };\r\n    if (email.value) {\r\n      newUser.email = email.value;\r\n    }\r\n    if (phone.value) {\r\n      newUser.phone = phone.value;\r\n    }\r\n    dispatch(signUp(newUser, props));\r\n  };\r\n  // submit 가 되면 서버에 아이디를 중복확인하는 요청을 먼저보낸다\r\n  // 결과를 state.user.checkId 에서 가져와서 중복된 아이디가 없으면\r\n  // 가입신청 request 를 보낸다\r\n  // 가입신청이 승인되면 thunk에서 login 페이지로 가도록 한다\r\n  return (\r\n    <Container>\r\n      SIGN UP\r\n      <Form>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            id=\"userId\"\r\n            value={userId.value}\r\n            onChange={userId.onChange}\r\n            placeholder=\"Enter id\"\r\n            required={true}\r\n          ></input>\r\n          <Input inputProp={{ ...name, placeholder: \"Enter name\" }}></Input>\r\n          <Input\r\n            inputProp={{ ...password, placeholder: \"Enter password\" }}\r\n          ></Input>\r\n          <Input\r\n            inputProp={{\r\n              ...passwordCheck,\r\n              placeholder: \"Enter password again\",\r\n            }}\r\n          ></Input>\r\n          <Text>이 밑의 항목은 선택사항 입니다.</Text>\r\n          <Line></Line>\r\n          <Input\r\n            inputProp={{\r\n              ...email,\r\n              placeholder: \"Enter email\",\r\n              required: false,\r\n            }}\r\n          ></Input>\r\n          <Input\r\n            inputProp={{\r\n              ...phone,\r\n              placeholder: \"Enter phone\",\r\n              required: false,\r\n            }}\r\n          ></Input>\r\n\r\n          <button>submit</button>\r\n        </form>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n","import { AxiosError } from \"axios\";\r\nimport { Qna } from \"../../Model/db\";\r\nimport { createAsyncAction, createReducer, ActionType } from \"typesafe-actions\";\r\n\r\nexport const GET_ALL_QUESTIONS_REQUEST = \"GET_ALL_QUESTIONS_REQUEST\";\r\nexport const GET_ALL_QUESTIONS_SUCCESS = \"GET_ALL_QUESTIONS_SUCCESS\";\r\nexport const GET_ALL_QUESTIONS_FAILURE = \"GET_ALL_QUESTIONS_FAILURE\";\r\n\r\nexport interface AdminState {\r\n  qna: Qna[];\r\n  err: {\r\n    qnaErr: AxiosError | null;\r\n  };\r\n}\r\nconst initialState: AdminState = {\r\n  qna: [],\r\n  err: {\r\n    qnaErr: null,\r\n  },\r\n};\r\n\r\nexport const getAllQuestionAction = createAsyncAction(\r\n  GET_ALL_QUESTIONS_REQUEST,\r\n  GET_ALL_QUESTIONS_SUCCESS,\r\n  GET_ALL_QUESTIONS_FAILURE\r\n)<null, Qna[], AxiosError>();\r\n\r\nexport type AdminAction = ActionType<typeof getAllQuestionAction>;\r\n// type adminAction = typeof addReviewAction;\r\nconst adminReducer = createReducer<AdminState, AdminAction>(initialState, {\r\n  GET_ALL_QUESTIONS_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, qnaErr: null },\r\n  }),\r\n  GET_ALL_QUESTIONS_SUCCESS: (state, action) => ({\r\n    ...state,\r\n    qna: action.payload,\r\n  }),\r\n  GET_ALL_QUESTIONS_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, qnaErr: action.payload },\r\n  }),\r\n});\r\nexport default adminReducer;\r\n","import { RootState } from \"../index\";\r\nimport { AdminAction, getAllQuestionAction } from \"./reducer\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport axios from \"axios\";\r\n\r\nconst dbUrl = process.env.REACT_APP_DBURL;\r\nconst getAllQuestionAPI = () => {\r\n  return axios.get(dbUrl + \"/qna/all\", { withCredentials: true });\r\n};\r\nexport function getAllQuestion(): ThunkAction<\r\n  void,\r\n  RootState,\r\n  null,\r\n  AdminAction\r\n> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = getAllQuestionAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await getAllQuestionAPI();\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Qna } from \"../../Model/db\";\r\nimport { RootState } from \"../../Redux/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { getPrdQueList, getProductDetail } from \"../../Redux/Product/thunk\";\r\nimport { getAllQuestion } from \"../../Redux/Admin/thunk\";\r\n\r\nconst QuestionItem = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n  align-items: center;\r\n  :first-child {\r\n    margin-top: 15px;\r\n  }\r\n  p {\r\n    padding: 0 auto;\r\n    width: 10%;\r\n    text-align: center;\r\n    :nth-child(2) {\r\n      cursor: pointer;\r\n      margin-left: 10%;\r\n      width: 70%;\r\n      text-align: left;\r\n    }\r\n  }\r\n`;\r\nconst AnswerItem = styled.div`\r\n  margin-top: 5px;\r\n  padding: 10px;\r\n  background-color: lightgray;\r\n  p {\r\n    margin-left: 5%;\r\n  }\r\n`;\r\n\r\nexport default function QnaLine({\r\n  page,\r\n  qna,\r\n  pid,\r\n}: {\r\n  page: string;\r\n  qna: Qna;\r\n  pid: string;\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [popupClosed, setpopupClosed] = useState(false);\r\n  useEffect(() => {\r\n    if (popupClosed) {\r\n      if (page === \"admin\") {\r\n        dispatch(getAllQuestion());\r\n      } else {\r\n        dispatch(getProductDetail(pid));\r\n      }\r\n    }\r\n  }, [popupClosed]);\r\n  // popup 감지\r\n  const [visibleAnswer, setvisibleAnswer] = useState(false);\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const isAdmin = user ? user.isAdmin : false;\r\n  let newUserId = qna.user.userId.slice(0, 4);\r\n  newUserId += \"****\";\r\n  const clickAddAnswer = () => {\r\n    const popup = window.open(\r\n      `/answerform/${qna.id}`,\r\n      \"PopupWin\",\r\n      \"width=500,height=650\"\r\n    );\r\n    const interval = setInterval(() => {\r\n      if (popup?.closed) {\r\n        setpopupClosed(true);\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n  }; //admin 계정일경우\r\n  //답변을 작성하는 팝업을 열고 닫혔는지를 1초마다 검사해서\r\n  //닫혔으면 다시 질문을 가져와서 화면을 다시 렌더링함\r\n\r\n  const clickContent = () => {\r\n    setvisibleAnswer(!visibleAnswer);\r\n  }; //질문내용을 클릭하면 답변이 보임\r\n  return (\r\n    <>\r\n      <QuestionItem>\r\n        {isAdmin ? (\r\n          <p>\r\n            {qna.answer ? (\r\n              \"답변완료\"\r\n            ) : (\r\n              <button id={qna.id} onClick={clickAddAnswer}>\r\n                답변하기\r\n              </button>\r\n            )}\r\n          </p>\r\n        ) : (\r\n          <p>{qna.answer ? \"답변완료\" : \"답변대기\"}</p>\r\n        )}\r\n        <p onClick={clickContent}>{qna.content}</p>\r\n        <p>{newUserId}</p>\r\n        <p>{qna.createdAt.slice(0, 10)}</p>\r\n      </QuestionItem>\r\n      {qna.answer && visibleAnswer && (\r\n        <AnswerItem>\r\n          <p>▶{qna.answer.content}</p>\r\n        </AnswerItem>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../Redux/index\";\r\nimport { Qna } from \"../../Model/db\";\r\nimport { toast } from \"react-toastify\";\r\nimport QnaLine from \"./QnaLine\";\r\nimport { getPrdQueList } from \"../../Redux/Product/thunk\";\r\n\r\nconst QnaBox = styled.div``;\r\nconst QnaHeader = styled.div`\r\n  padding-top: 20px;\r\n  margin-top: 40px;\r\n`;\r\nconst Button = styled.button`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\nconst QnaList = styled.div``;\r\n\r\nconst TextStrong = styled.div`\r\n  padding: 0 auto;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  width: 500px;\r\n`;\r\nconst QnaListTop = styled.div`\r\n  display: flex;\r\n  border-bottom: solid 1px lightgray;\r\n  border-top: solid 1px black;\r\n  padding: 20px 0;\r\n  p {\r\n    text-align: center;\r\n    padding: 0 auto;\r\n    width: 100px;\r\n    :nth-child(2) {\r\n      width: 700px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function QnaContainer({\r\n  productId,\r\n  qnaList,\r\n  setpopupClosed,\r\n  popupClosed,\r\n}: {\r\n  productId: string;\r\n  qnaList: Qna[];\r\n  setpopupClosed: React.Dispatch<React.SetStateAction<boolean>>;\r\n  popupClosed: boolean;\r\n}) {\r\n  //props 에 productID 와 qna 목록이 필요\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  // const [popupClosed, setpopupClosed] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (popupClosed) {\r\n      dispatch(getPrdQueList(productId));\r\n      setpopupClosed(false);\r\n    }\r\n  }, [popupClosed]);\r\n  const isAdmin = user ? user.isAdmin : false;\r\n\r\n  if (qnaList === undefined) {\r\n    qnaList = [];\r\n  }\r\n  const clickAddQna = () => {\r\n    if (!user) {\r\n      toast.error(\"you need to login\");\r\n      return;\r\n    }\r\n    if (productId) {\r\n      const a = window.open(\r\n        `/qnaform/${productId}`,\r\n        \"PopupWin\",\r\n        \"width=500,height=600\"\r\n      );\r\n      const interval = setInterval(() => {\r\n        if (a?.closed) {\r\n          setpopupClosed(true);\r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n      //질문을 작성하는 팝업을 열고 닫혔는지를 1초마다 검사해서\r\n      //닫혔으면 다시 질문을 가져와서 화면을 다시 렌더링함\r\n    }\r\n  };\r\n\r\n  return (\r\n    <QnaBox>\r\n      <QnaHeader>\r\n        <TextStrong>{\"Q&A\"}</TextStrong>\r\n        {!isAdmin && <Button onClick={clickAddQna}>qna 작성하기</Button>}\r\n      </QnaHeader>\r\n      <QnaListTop>\r\n        <p>답변상태</p>\r\n        <p>내용</p>\r\n        <p>작성자</p>\r\n        <p>작성일</p>\r\n      </QnaListTop>\r\n      <QnaList>\r\n        {qnaList.map((qna) => {\r\n          if (qna.question) {\r\n            return;\r\n          }\r\n          return (\r\n            <QnaLine\r\n              page=\"productDeatail\"\r\n              key={qna.id}\r\n              qna={qna}\r\n              pid={productId}\r\n            />\r\n          );\r\n        })}\r\n      </QnaList>\r\n    </QnaBox>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCart } from \"../Redux/User/thunk\";\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport QnaContainer from \"../Components/Qna/QnaContainer\";\r\nimport { match } from \"../Types\";\r\nimport axios from \"axios\";\r\nimport { BACK_URL, Product } from \"../Model/db\";\r\nimport ServerError from \"./ServerError\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getProductDetail } from \"../Redux/Product/thunk\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  display: block;\r\n  max-width: 960px;\r\n`;\r\nconst ProductWrapper = styled.div``;\r\nconst ProductHeader = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px solid black;\r\n`;\r\nconst ProductPreview = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst ProductBuy = styled.div`\r\n  width: 50%;\r\n  margin-left: 15%;\r\n`;\r\nconst Row = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst ProductDescriptions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\nconst Strong = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n`;\r\nconst Stock = styled.div`\r\n  color: blueviolet;\r\n`;\r\nconst Price = styled.div`\r\n  color: coral;\r\n`;\r\n\r\nconst AddCartBtn = styled.div`\r\n  width: 80%;\r\n  color: white;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  background-color: black;\r\n  border-radius: 10% / 50%;\r\n  text-align: center;\r\n  padding: 20px 0;\r\n`;\r\nconst NaverPay = styled.div``;\r\n\r\ninterface MatchParams {\r\n  productIndex: string;\r\n}\r\n\r\nfunction ProductDetail({ match }: { match: match<MatchParams> }) {\r\n  const product = useSelector(\r\n    (state: RootState) => state.product.productDetail\r\n  );\r\n  const { productIndex } = match.params;\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const [popupClosed, setpopupClosed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!popupClosed) {\r\n      dispatch(getProductDetail(productIndex));\r\n    }\r\n  }, [popupClosed]);\r\n  const dispatch = useDispatch();\r\n  if (!product) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const clickAddCart = () => {\r\n    if (!user) {\r\n      toast.error(\"you need to login\");\r\n      return;\r\n    }\r\n    dispatch(addCart(product.id));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <ProductWrapper>\r\n          <ProductHeader>\r\n            <ProductPreview>\r\n              <img width={400} height={400} src={product.thumbnail}></img>\r\n            </ProductPreview>\r\n            <ProductBuy>\r\n              <Row>\r\n                <Strong>{product.name}</Strong>\r\n              </Row>\r\n              <Row>\r\n                <Stock>재고 {product.stock} 개</Stock>\r\n              </Row>\r\n              <Row>\r\n                <Price>{product.price} 원</Price>\r\n              </Row>\r\n              <Row>\r\n                <AddCartBtn onClick={clickAddCart}>장바구니</AddCartBtn>\r\n              </Row>\r\n              <Row>\r\n                <NaverPay />\r\n              </Row>\r\n            </ProductBuy>\r\n          </ProductHeader>\r\n          <ProductDescriptions>\r\n            <p>{product.description}</p>\r\n            {product.productImage.map((image, i) => (\r\n              <div key={i}>\r\n                <img width={\"100%\"} src={image.url} />\r\n              </div>\r\n            ))}\r\n          </ProductDescriptions>\r\n\r\n          <QnaContainer\r\n            popupClosed={popupClosed}\r\n            setpopupClosed={setpopupClosed}\r\n            productId={product.id}\r\n            qnaList={product.qnas}\r\n          />\r\n        </ProductWrapper>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProductDetail);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\nconst WhiteBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 300px;\r\n  height: 100px;\r\n  margin: 0 auto;\r\n  padding-top: 10px;\r\n  position: relative;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  p {\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  margin-top: 15px;\r\n  width: 50px;\r\n  height: 25px;\r\n  background-color: blue;\r\n  color: white;\r\n  border: 0px;\r\n  border-radius: 3px;\r\n`;\r\nexport default function ModalTop({ message }: { message: string }) {\r\n  const clickModalBtn = () => {\r\n    window.close();\r\n  };\r\n  return (\r\n    <Container>\r\n      <WhiteBox>\r\n        <p>{message}</p>\r\n        <p>확인을 누르면 창이 닫힙니다.</p>\r\n        <Button onClick={clickModalBtn}>확인</Button>\r\n      </WhiteBox>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addQuestion } from \"../../Redux/Product/thunk\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { RootState } from \"../../Redux/index\";\r\nimport ModalTop from \"../ModalTop\";\r\nimport { toast } from \"react-toastify\";\r\nimport { match } from \"../../Types\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n\r\n  color: black;\r\n  font-size: 3rem;\r\n  text-align: center;\r\n  padding-top: 35px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  position: relative;\r\n  width: 400px;\r\n  height: 300px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 100%;\r\n  resize: none;\r\n`;\r\nconst LimitLabel = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-top: 15px;\r\n  width: 50px;\r\n  height: 25px;\r\n  background-color: blue;\r\n  color: white;\r\n  border: 0px;\r\n  border-radius: 3px;\r\n`;\r\nconst maxLength = 100;\r\ninterface MatchParams {\r\n  productId: string;\r\n}\r\nfunction QnaForm({ match }: { match: match<MatchParams> }) {\r\n  const [isSubmit, setisSubmit] = useState(false);\r\n  const {\r\n    params: { productId },\r\n  } = match;\r\n  const addQuestionErr = useSelector(\r\n    (state: RootState) => state.product.error.addQuestion\r\n  );\r\n  const [textarea, settextarea] = useState(\"\");\r\n\r\n  const onTextarea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    settextarea(e.target.value);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const clickQnaBtn = async () => {\r\n    if (!textarea.trim()) {\r\n      toast.error(\"내용을 입력하세요\");\r\n      return;\r\n    }\r\n    await dispatch(addQuestion({ content: textarea, productId }));\r\n    setisSubmit(true);\r\n  };\r\n\r\n  if (isSubmit) {\r\n    if (addQuestionErr === null) {\r\n      return <ModalTop message={\"등록 성공\"} />;\r\n    } else {\r\n      return <ModalTop message={\"등록 실패\"} />;\r\n    }\r\n  }\r\n  //등록을 하면 isSubmit 가 true 가되고 ModalTop이 렌더됨\r\n  //modal top은 message 버튼을 만들고 버튼을 누르면 닫히게 됨\r\n  return (\r\n    <Container>\r\n      <Header>질문을 작성하세요</Header>\r\n\r\n      <TextContainer>\r\n        <TextArea\r\n          maxLength={maxLength}\r\n          value={textarea}\r\n          onChange={onTextarea}\r\n        />\r\n        <LimitLabel>\r\n          {textarea.length}/{maxLength}{\" \"}\r\n        </LimitLabel>\r\n      </TextContainer>\r\n\r\n      <Button onClick={clickQnaBtn}>등록</Button>\r\n    </Container>\r\n  );\r\n}\r\nexport default withRouter(QnaForm);\r\n","import { createAsyncAction, ActionType, createReducer } from \"typesafe-actions\";\r\nimport { AxiosError } from \"axios\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"../index\";\r\nimport axios from \"axios\";\r\nconst dbUrl = process.env.REACT_APP_DBURL;\r\n\r\nexport interface PopupState {\r\n  data: {\r\n    qna: any;\r\n    address: string;\r\n    addQna: {\r\n      result: boolean;\r\n      closed: boolean;\r\n    };\r\n  };\r\n  err: {\r\n    qnaErr: AxiosError | null;\r\n  };\r\n}\r\nconst initialState: PopupState = {\r\n  data: {\r\n    qna: {},\r\n    address: \"\",\r\n    addQna: {\r\n      result: false,\r\n      closed: true,\r\n    },\r\n  },\r\n  err: {\r\n    qnaErr: null,\r\n  },\r\n};\r\nconst GET_QNA_REQUEST = \"GET_QNA_REQUEST\";\r\nconst GET_QNA_SUCCESS = \"GET_QNA_SUCCESS\";\r\nconst GET_QNA_FAILURE = \"GET_QNA_FAILURE\";\r\n\r\nconst SAVE_ADDRESS = \"SAVE_ADDRESS\";\r\n\r\nconst saveAddressAction = (address: string) => {\r\n  return <const>{\r\n    type: SAVE_ADDRESS,\r\n    payload: address,\r\n  };\r\n};\r\nconst getQnaAction = createAsyncAction(\r\n  GET_QNA_REQUEST,\r\n  GET_QNA_SUCCESS,\r\n  GET_QNA_FAILURE\r\n)<null, any, AxiosError>();\r\n\r\ntype PopupAction =\r\n  | ActionType<typeof getQnaAction>\r\n  | ReturnType<typeof saveAddressAction>;\r\n\r\nconst getQnaAPI = (qnaId: string) => {\r\n  return axios.get(dbUrl + `/qna/getquestion?qnaId=${qnaId}`, {\r\n    withCredentials: true,\r\n  });\r\n};\r\nexport function getQuestion(\r\n  qnaId: string\r\n): ThunkAction<void, RootState, null, PopupAction> {\r\n  return async (dispatch) => {\r\n    const { request, success, failure } = getQnaAction;\r\n    dispatch(request(null));\r\n    try {\r\n      const response = await getQnaAPI(qnaId);\r\n      dispatch(success(response.data));\r\n    } catch (e) {\r\n      dispatch(failure(e));\r\n    }\r\n  };\r\n}\r\n\r\nconst userReducer = createReducer<PopupState, PopupAction>(initialState, {\r\n  GET_QNA_REQUEST: (state) => ({ ...state }),\r\n  GET_QNA_SUCCESS: (state, action) => ({\r\n    ...state,\r\n    data: { ...state.data, qna: action.payload },\r\n  }),\r\n  GET_QNA_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, qnaErr: action.payload },\r\n  }),\r\n  SAVE_ADDRESS: (state, action) => ({\r\n    ...state,\r\n    data: { ...state.data, address: action.payload },\r\n  }),\r\n});\r\nexport default userReducer;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAnswer } from \"../Redux/Product/thunk\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport ModalTop from \"./ModalTop\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getQuestion } from \"../Redux/Popup/reducer\";\r\nimport { match } from \"../Types\";\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 80%;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  color: black;\r\n  font-size: 3rem;\r\n  text-align: center;\r\n  padding-top: 35px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  position: relative;\r\n  width: 400px;\r\n  height: 300px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 100%;\r\n  resize: none;\r\n`;\r\nconst LimitLabel = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-top: 15px;\r\n  width: 50px;\r\n  height: 25px;\r\n  background-color: blue;\r\n  color: white;\r\n  border: 0px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst maxLength = 100;\r\nconst QuestionBox = styled.div`\r\n  width: 300px;\r\n  h2 {\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\nconst WhiteBox = styled.div`\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border: 0.1px solid black;\r\n  background-color: white;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  width: 400px;\r\n  margin: 10px 0;\r\n`;\r\ninterface MatchParams {\r\n  qnaId: string;\r\n}\r\n\r\nfunction AnswerForm({ match }: { match: match<MatchParams> }) {\r\n  const {\r\n    params: { qnaId },\r\n  } = match;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  useEffect(() => {\r\n    dispatch(getQuestion(qnaId));\r\n  }, [user]);\r\n  const question = useSelector((state: RootState) => state.popup.data.qna);\r\n  const qerr = useSelector((state: RootState) => state.product.error.addAnswer);\r\n  const [textarea, settextarea] = useState(\"\");\r\n  const [isSubmit, setisSubmit] = useState(false);\r\n\r\n  const onTextarea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    settextarea(e.target.value);\r\n  };\r\n  const clickQnaBtn = async () => {\r\n    if (!textarea.trim()) {\r\n      toast.error(\"내용을 입력하세요\");\r\n      return;\r\n    }\r\n    await dispatch(\r\n      addAnswer({\r\n        content: textarea,\r\n        qId: qnaId,\r\n        productId: question.product.id,\r\n      })\r\n    );\r\n\r\n    setisSubmit(true);\r\n  };\r\n  if (isSubmit) {\r\n    if (qerr === null) {\r\n      return <ModalTop message={\"등록 성공\"} />;\r\n    } else {\r\n      return <ModalTop message={\"등록 실패\"} />;\r\n    }\r\n  } //등록을 하면 isSubmit 가 true 가되고 ModalTop이 렌더됨\r\n  //modal top은 message 버튼을 만들고 버튼을 누르면 닫히게 됨\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Header>답변을 작성하세요</Header>\r\n        <QuestionBox>\r\n          <h2>질문 내용:</h2>\r\n          <WhiteBox>\r\n            <p>{question.content}</p>\r\n          </WhiteBox>\r\n        </QuestionBox>\r\n        <Label>답변:</Label>\r\n        <TextContainer>\r\n          <TextArea\r\n            maxLength={maxLength}\r\n            value={textarea}\r\n            onChange={onTextarea}\r\n          />\r\n          <LimitLabel>\r\n            {textarea.length}/{maxLength}{\" \"}\r\n          </LimitLabel>\r\n        </TextContainer>\r\n\r\n        <Button onClick={clickQnaBtn}>등록</Button>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default withRouter(AnswerForm);\r\n","import React from \"react\";\r\n\r\nexport const CartIcon = ({ size = 24 }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M24 3l-.743 2h-1.929l-3.474 12h-13.239l-4.615-11h16.812l-.564 2h-13.24l2.937 7h10.428l3.432-12h4.195zm-15.5 15c-.828 0-1.5.672-1.5 1.5 0 .829.672 1.5 1.5 1.5s1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm6.9-7-1.9 7c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const Logo = () => {\r\n  return <strong>LOGO</strong>;\r\n};\r\nexport const Login = ({ size = 24 }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M16 2c3.309 0 6 2.691 6 6s-2.691 6-6 6-6-2.691-6-6 2.691-6 6-6zm0-2c-4.418 0-8 3.582-8 8s3.582 8 8 8 8-3.582 8-8-3.582-8-8-8zm-5.405 16.4l-1.472 1.6h-3.123v2h-2v2h-2v-2.179l5.903-5.976c-.404-.559-.754-1.158-1.038-1.795l-6.865 6.95v5h6v-2h2v-2h2l2.451-2.663c-.655-.249-1.276-.562-1.856-.937zm7.405-11.4c.551 0 1 .449 1 1s-.449 1-1 1-1-.449-1-1 .449-1 1-1zm0-1c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const Add = ({ size = 24 }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={size}\r\n      height={size}\r\n      viewBox={`0 0 ${size} ${size}`}\r\n    >\r\n      <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 13h-5v5h-2v-5h-5v-2h5v-5h2v5h5v2z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const RightArrow = ({ size = 24 }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={size}\r\n      height={size}\r\n      viewBox={`0 0 ${size} ${size}`}\r\n    >\r\n      <path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const Out = ({ size = 24 }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={size}\r\n      height={size}\r\n      viewBox={`0 0 ${size} ${size}`}\r\n    >\r\n      <path d=\"M10 9.408l2.963 2.592-2.963 2.592v-1.592h-8v-2h8v-1.592zm-2-4.408v4h-8v6h8v4l8-7-8-7zm6-3c-1.787 0-3.46.474-4.911 1.295l.228.2 1.396 1.221c1.004-.456 2.114-.716 3.287-.716 4.411 0 8 3.589 8 8s-3.589 8-8 8c-1.173 0-2.283-.26-3.288-.715l-1.396 1.221-.228.2c1.452.82 3.125 1.294 4.912 1.294 5.522 0 10-4.477 10-10s-4.478-10-10-10z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const AddUser = ({ size = 24 }) => {\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox={`0 0 ${size} ${size}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n    >\r\n      <path d=\"M22.697 17.991c.487 1.694.954 3.318 1.254 4.369.033.118.049.236.049.35 0 .522-.32 1.005-.83 1.201l-.002.002c-.604.232-1.286-.013-1.599-.578-.694-1.253-1.866-3.304-2.47-4.357l.428.016c1.18 0 2.273-.371 3.17-1.003zm-4.215 6.002h-12.953l-.231-5.686s-1.901 3.195-2.867 4.937c-.313.565-.995.81-1.599.579l-.002-.003c-.51-.196-.83-.678-.83-1.201 0-.114.016-.232.049-.349.635-2.23 2.038-6.952 2.771-9.526.273-.959 1.152-1.619 2.154-1.619h9.582c-.344.717-.537 1.521-.537 2.369 0 2.751 2.027 5.033 4.67 5.437l-.207 5.062zm1.018-14.993c2.484 0 4.5 2.016 4.5 4.5s-2.016 4.5-4.5 4.5-4.5-2.016-4.5-4.5 2.016-4.5 4.5-4.5zm.5 2h-1v2h-2v1h2v2h1v-2h2v-1h-2v-2zm-7.994-11c2.777 0 5.031 2.243 5.031 5.006 0 2.763-2.254 5.006-5.031 5.006-2.777 0-5.031-2.243-5.031-5.006 0-2.763 2.254-5.006 5.031-5.006z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const StarFill = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const StarEmpty = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const UserProfile = () => {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n    >\r\n      <path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12zm8.127 19.41c-.282-.401-.772-.654-1.624-.85-3.848-.906-4.097-1.501-4.352-2.059-.259-.565-.19-1.23.205-1.977 1.726-3.257 2.09-6.024 1.027-7.79-.674-1.119-1.875-1.734-3.383-1.734-1.521 0-2.732.626-3.409 1.763-1.066 1.789-.693 4.544 1.049 7.757.402.742.476 1.406.22 1.974-.265.586-.611 1.19-4.365 2.066-.852.196-1.342.449-1.623.848 2.012 2.207 4.91 3.592 8.128 3.592s6.115-1.385 8.127-3.59zm.65-.782c1.395-1.844 2.223-4.14 2.223-6.628 0-6.071-4.929-11-11-11s-11 4.929-11 11c0 2.487.827 4.783 2.222 6.626.409-.452 1.049-.81 2.049-1.041 2.025-.462 3.376-.836 3.678-1.502.122-.272.061-.628-.188-1.087-1.917-3.535-2.282-6.641-1.03-8.745.853-1.431 2.408-2.251 4.269-2.251 1.845 0 3.391.808 4.24 2.218 1.251 2.079.896 5.195-1 8.774-.245.463-.304.821-.179 1.094.305.668 1.644 1.038 3.667 1.499 1 .23 1.64.59 2.049 1.043z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport const Setting = () => {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n    >\r\n      <path d=\"M24 19h-1v-2.2c-1.853 4.237-6.083 7.2-11 7.2-6.623 0-12-5.377-12-12h1c0 6.071 4.929 11 11 11 4.66 0 8.647-2.904 10.249-7h-2.249v-1h4v4zm-11.036 0h-1.886c-.34-.957-.437-1.571-1.177-1.878h-.001c-.743-.308-1.251.061-2.162.494l-1.333-1.333c.427-.899.804-1.415.494-2.163-.308-.74-.926-.839-1.878-1.177v-1.886c.954-.339 1.57-.437 1.878-1.178.308-.743-.06-1.248-.494-2.162l1.333-1.333c.918.436 1.421.801 2.162.494l.001-.001c.74-.307.838-.924 1.177-1.877h1.886c.34.958.437 1.57 1.177 1.877l.001.001c.743.308 1.252-.062 2.162-.494l1.333 1.333c-.435.917-.801 1.421-.494 2.161v.001c.307.739.915.835 1.878 1.178v1.886c-.953.338-1.571.437-1.878 1.178-.308.743.06 1.249.494 2.162l-1.333 1.333c-.92-.438-1.42-.802-2.157-.496-.746.31-.844.926-1.183 1.88zm-.943-4.667c-1.289 0-2.333-1.044-2.333-2.333 0-1.289 1.044-2.334 2.333-2.334 1.289 0 2.333 1.045 2.333 2.334 0 1.289-1.044 2.333-2.333 2.333zm-8.021-5.333h-4v-4h1v2.2c1.853-4.237 6.083-7.2 11-7.2 6.623 0 12 5.377 12 12h-1c0-6.071-4.929-11-11-11-4.66 0-8.647 2.904-10.249 7h2.249v1z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Product } from \"../Model/db\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteCart } from \"../Redux/User/thunk\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 3vh;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\nconst ProductDescription = styled.div``;\r\nconst Strong = styled.p`\r\n  margin-top: 10px;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n`;\r\nconst Image = styled.div`\r\n  width: 60%;\r\n`;\r\nconst P = styled.p`\r\n  margin-top: 5px;\r\n  color: coral;\r\n`;\r\nconst RemoveBtn = styled.button`\r\n  margin-top: 30px;\r\n`;\r\n//장바구니용 product card\r\nexport default function FatProductCard({ product }: { product: Product }) {\r\n  const dispatch = useDispatch();\r\n  const clickRemoveBtn = () => {\r\n    dispatch(deleteCart(product.id));\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Image>\r\n          <img width={150} height={150} src={product.thumbnail}></img>\r\n        </Image>\r\n        <ProductDescription>\r\n          <Strong>{product.name}</Strong>\r\n          <P>{product.price} 원</P>\r\n          <RemoveBtn type=\"button\" onClick={clickRemoveBtn}>\r\n            REMOVE\r\n          </RemoveBtn>\r\n        </ProductDescription>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { RightArrow } from \"./Icons\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport FatProductCard from \"./FatProductCard\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\nconst Backgroud = styled.div`\r\n  position: fixed;\r\n  height: 100%;\r\n  top: 0;\r\n  right: 0px;\r\n  width: 100%;\r\n  background-color: darkgrey;\r\n  opacity: 0.5;\r\n`;\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  width: 500px;\r\n  height: 100%;\r\n  top: 0;\r\n  right: 0;\r\n  background-color: white;\r\n  opacity: 1;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\nconst Top = styled.div`\r\n  width: 80%;\r\n  display: flex;\r\n  margin-top: 3vh;\r\n  justify-content: space-between;\r\n`;\r\nconst Strong = styled.div`\r\n  font-size: 3rem;\r\n  font-weight: 600;\r\n`;\r\nconst Line = styled.div`\r\n  width: 80%;\r\n  height: 1px;\r\n  background-color: black;\r\n  margin: 20px 0 auto;\r\n`;\r\nconst ProductList = styled.div`\r\n  width: 80%;\r\n  overflow-y: scroll;\r\n  height: 80vh;\r\n`;\r\nconst Button = styled.button`\r\n  height: 30px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst ProductCartWraper = styled.div``;\r\ninterface Props extends RouteComponentProps {\r\n  toggleCartVisible: () => void;\r\n}\r\n\r\nfunction Cart(props: Props) {\r\n  const { toggleCartVisible } = props;\r\n  //toggleCartVisible 로 카트를 안보이게 할 수 있음\r\n  const cart = useSelector((state: RootState) => state.user.cart);\r\n  const clickBuyBtn = () => {\r\n    toggleCartVisible();\r\n    props.history.push(\"/orderSheet\");\r\n  };\r\n  useEffect(() => {\r\n    document.body.style.cssText = `\r\n            position: fixed; \r\n            top: -${window.scrollY}px;\r\n            width:${100}%;\r\n        `;\r\n    return () => {\r\n      const scrollY = document.body.style.top;\r\n      document.body.style.cssText = `position: \"\"; top: \"\";`;\r\n      window.scrollTo(0, parseInt(scrollY || \"0\") * -1);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Backgroud></Backgroud>\r\n      <Wrapper>\r\n        <Container>\r\n          <Top>\r\n            <Strong>CART</Strong>\r\n            <div onClick={toggleCartVisible}>\r\n              {\" \"}\r\n              <RightArrow size={47}></RightArrow>\r\n            </div>\r\n          </Top>\r\n          <Line></Line>\r\n          <ProductList>\r\n            {cart &&\r\n              cart.map((product, i) => {\r\n                return (\r\n                  <ProductCartWraper key={i}>\r\n                    <FatProductCard product={product} />\r\n                  </ProductCartWraper>\r\n                );\r\n              })}\r\n          </ProductList>\r\n          <Button onClick={clickBuyBtn}>구매하기</Button>\r\n        </Container>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\nexport default withRouter(Cart);\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  CartIcon,\r\n  Logo,\r\n  Login,\r\n  Add,\r\n  Out,\r\n  AddUser,\r\n  UserProfile,\r\n  Setting,\r\n} from \"./Icons\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from \"./Cart\";\r\nimport { logOut } from \"../Redux/User/thunk\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: white;\r\n  width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n\r\n  max-width: 960px;\r\n  padding: 0 20px;\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\nconst Item = styled.div`\r\n  margin-left: 10px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst LeftContent = styled.div`\r\n  display: flex;\r\n`;\r\nconst RightContent = styled.div`\r\n  display: flex;\r\n`;\r\n\r\ntype Props = RouteComponentProps;\r\nfunction Header(props: Props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const [cartVisible, setcartVisible] = useState(false);\r\n  const clickCart = () => {\r\n    toggleCartVisible();\r\n    //Cart 아이콘을 누르면 Cart가 보이게함\r\n  };\r\n  const toggleCartVisible = () => {\r\n    setcartVisible(!cartVisible);\r\n  };\r\n  const clickOut = () => {\r\n    dispatch(logOut(props));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Container>\r\n          <LeftContent>\r\n            <Link to=\"/\">\r\n              <Logo></Logo>\r\n            </Link>\r\n          </LeftContent>\r\n          <RightContent>\r\n            {user && !user.isAdmin && (\r\n              <Link to=\"/orderList\">\r\n                <Item>\r\n                  <UserProfile />\r\n                </Item>\r\n              </Link>\r\n            )}\r\n            {user && user.isAdmin && (\r\n              <Item>\r\n                <Link to=\"/adminPage\">\r\n                  <Setting></Setting>\r\n                </Link>\r\n              </Item>\r\n            )}\r\n            {user && user.isAdmin && (\r\n              <Item>\r\n                <Link to=\"/addproduct\">\r\n                  <Add size={30}></Add>\r\n                </Link>\r\n              </Item>\r\n            )}\r\n            {user && (\r\n              <>\r\n                <Item onClick={clickCart}>\r\n                  <CartIcon size={30}></CartIcon>\r\n                </Item>\r\n                <Item onClick={clickOut}>\r\n                  <Out size={30}></Out>\r\n                </Item>\r\n              </>\r\n            )}\r\n            {!user && (\r\n              <>\r\n                <Item>\r\n                  <Link to=\"/signup\">\r\n                    <AddUser size={30}></AddUser>\r\n                  </Link>\r\n                </Item>\r\n                <Item>\r\n                  <Link to=\"/login\">\r\n                    <Login size={30}></Login>\r\n                  </Link>\r\n                </Item>\r\n              </>\r\n            )}\r\n          </RightContent>\r\n        </Container>\r\n        {user && <div>안녕하세요 {user.name}님</div>}\r\n      </Wrapper>\r\n      {cartVisible && <Cart toggleCartVisible={toggleCartVisible} />}\r\n    </>\r\n  );\r\n}\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport { getProfile } from \"../Redux/User/thunk\";\r\nimport Header from \"./Header\";\r\nimport { getProducts } from \"../Redux/Product/thunk\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  display: block;\r\n  max-width: 960px;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  height: 300px;\r\n`;\r\n\r\nexport default function Layout({ children }: { children: React.ReactNode }) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  if (!user) {\r\n    dispatch(getProfile());\r\n  }\r\n  dispatch(getProducts());\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Header></Header>\r\n        {children}\r\n      </Container>\r\n      <Footer />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../Input\";\r\nimport { findAddress } from '../../Api/KaKaoAddressApi';\r\nimport { AddressFormProp } from \"../../Routes/OrderSheet\";\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n`;\r\nconst Column = styled.div`\r\n  border: 1px solid lightgray;\r\n  display: flex;\r\n  height: 50px;\r\n  align-items: center;\r\n  :nth-child(2) {\r\n    height: 150px;\r\n  }\r\n  :nth-child(3) {\r\n    input {\r\n      :not(:first-child) {\r\n        margin: 0 10px;\r\n      }\r\n      :nth-child(2) {\r\n        margin-left: 0;\r\n      }\r\n      width: 50px;\r\n    }\r\n  }\r\n  label {\r\n    width: 30%;\r\n    margin-left: 1em;\r\n  }\r\n`;\r\n\r\nconst AddressSearchBox = styled.div``;\r\nconst AddressSearchBoxColumn = styled.div`\r\n  margin-top: 10px;\r\n  input {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport default function AddressForm({\r\n  addressFormProp,\r\n}: {\r\n  addressFormProp: AddressFormProp;\r\n}) {\r\n  const {\r\n    name,\r\n    zip,\r\n    setzip,\r\n    address,\r\n    setaddress,\r\n    address2,\r\n    phone1,\r\n    phone2,\r\n    phone3,\r\n    delivermessage,\r\n  } = addressFormProp;\r\n  const clickZipcodeBtn = () => {\r\n    findAddress(setzip, setaddress);\r\n  };\r\n  //우변번호 버튼을 누르면 카카오 도로명 api 가 뜨고 결과값을\r\n  //zip address에 설정해줌\r\n  const onChangeAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.target.value = \"\";\r\n  };\r\n  return (\r\n    <Container>\r\n      <Column>\r\n        <label>받으시는 분 </label>\r\n        <Input inputProp={{ ...name }} />\r\n      </Column>\r\n      <Column>\r\n        <label>주소 </label>\r\n        <AddressSearchBox>\r\n          <AddressSearchBoxColumn>\r\n            <Input inputProp={{ value: zip, onChange: onChangeAddress }} />\r\n            <button type=\"button\" onClick={clickZipcodeBtn}>\r\n              우편번호\r\n            </button>\r\n          </AddressSearchBoxColumn>\r\n          <AddressSearchBoxColumn>\r\n            <Input inputProp={{ value: address, readOnly: true }} />\r\n            <Input inputProp={{ ...address2, required: false }} />\r\n          </AddressSearchBoxColumn>\r\n        </AddressSearchBox>\r\n      </Column>\r\n      <Column>\r\n        <label>전화 번호 </label>\r\n        <Input inputProp={{ ...phone1 }} />\r\n        {\" - \"}\r\n        <Input inputProp={{ ...phone2 }} />\r\n        {\" - \"}\r\n        <Input inputProp={{ ...phone3 }} />\r\n      </Column>\r\n      <Column>\r\n        <label>배송 메세지</label>\r\n        <Input inputProp={{ ...delivermessage, required: false }} />\r\n      </Column>\r\n    </Container>\r\n  );\r\n}\r\n","export const findAddress = (\r\n  setzip: React.Dispatch<React.SetStateAction<string>>,\r\n  setaddress: React.Dispatch<React.SetStateAction<string>>\r\n) => {\r\n  new window.daum.Postcode({\r\n    oncomplete: function (data: any) {\r\n      const { address, zonecode } = data;\r\n      setzip(zonecode);\r\n      setaddress(address);\r\n      //cacao 도로명  api 에서 결과를 반환하면 setzip과 setaddress로\r\n      // ordersheet 컴포넌트에 주소를 설정함\r\n    },\r\n  }).open();\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../Redux/index\";\r\n\r\nconst Container = styled.div``;\r\nconst Title = styled.div`\r\n  font-size: 3rem;\r\n  font-weight: 600;\r\n`;\r\nconst Column = styled.div`\r\n  display: flex;\r\n  margin-top: 10px;\r\n  div {\r\n    :first-child {\r\n      width: 100px;\r\n    }\r\n  }\r\n`;\r\nconst Alert = styled.span`\r\n  color: red;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport default function Payment({\r\n  price,\r\n  setpaymentPossible,\r\n  cash,\r\n}: {\r\n  cash: number;\r\n  price: number;\r\n  setpaymentPossible: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  // const cash = user.point;\r\n  const remainCash = cash - price;\r\n\r\n  if (remainCash < 0) {\r\n    setpaymentPossible(false);\r\n  } else {\r\n    setpaymentPossible(true);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>캐시 사용</Title>\r\n      <Column>\r\n        <div>금액</div> <div>{price}</div>\r\n      </Column>\r\n      <Column>\r\n        <div>내 캐쉬</div> <div>{cash}</div>\r\n      </Column>\r\n      {remainCash >= 0 ? (\r\n        <Column>\r\n          <div>남을 캐쉬</div> <div>{remainCash}</div>\r\n        </Column>\r\n      ) : (\r\n        <Column>\r\n          <Alert> 잔액 부족 </Alert>\r\n        </Column>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddressForm from \"../Components/Address/AddressForm\";\r\nimport Payment from \"../Components/Payment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../Redux/index\";\r\nimport FatProductCard from \"../Components/FatProductCard\";\r\nimport { useState } from \"react\";\r\nimport { useInputNumMaxLen, useInputStr2 } from \"../Hooks/useInput\";\r\nimport { toast } from \"react-toastify\";\r\nimport { addOrder } from \"../Redux/User/thunk\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  margin-left: 10%;\r\n`;\r\nconst Title = styled.div`\r\n  margin: 10px 0;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst CartItemList = styled.div`\r\n  border: 0.5rem solid lightgray;\r\n  padding: 10px;\r\n`;\r\nconst ProductColumn = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  input {\r\n    width: 70px;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst Button = styled.button`\r\n  height: 30px;\r\n  width: 100px;\r\n  background-color: blueviolet;\r\n  color: white;\r\n  margin: 30px 0;\r\n  margin-left: 300px;\r\n  border-radius: 5px;\r\n`;\r\ninterface ProductQuantity {\r\n  productId: string;\r\n  quantity: number;\r\n  price: number;\r\n}\r\nexport interface AddressFormProp {\r\n  name: ReturnType<typeof useInputStr2>;\r\n  zip: string;\r\n  setzip: React.Dispatch<React.SetStateAction<string>>;\r\n  address: string;\r\n  setaddress: React.Dispatch<React.SetStateAction<string>>;\r\n  address2: ReturnType<typeof useInputStr2>;\r\n  phone1: ReturnType<typeof useInputNumMaxLen>;\r\n  phone2: ReturnType<typeof useInputNumMaxLen>;\r\n  phone3: ReturnType<typeof useInputNumMaxLen>;\r\n  delivermessage: ReturnType<typeof useInputStr2>;\r\n}\r\n\r\nexport default function OrderSheet(props: RouteComponentProps) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const products = useSelector((state: RootState) => state.user.cart);\r\n\r\n  const [quantityList, setQuantityList] = useState<ProductQuantity[]>([]);\r\n  //제품의 수량과 id를 같이 묶어두는 방식으로 보관하기 위해 따로\r\n  // 변수를 만듬\r\n  const [totalPrice, settotalPrice] = useState(0);\r\n  const [paymentPossible, setpaymentPossible] = useState(false);\r\n  // setQuantityList(newQuantityList);\r\n  //addressForm\r\n  const name = useInputStr2(\"\");\r\n  const [zip, setzip] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const address2 = useInputStr2(\"\");\r\n  const phone1 = useInputNumMaxLen(\"\", 4);\r\n  const phone2 = useInputNumMaxLen(\"\", 4);\r\n  const phone3 = useInputNumMaxLen(\"\", 4);\r\n  const delivermessage = useInputStr2(\"\");\r\n  const addressFormProp = {\r\n    name,\r\n    zip,\r\n    setzip,\r\n    address,\r\n    setaddress,\r\n    address2,\r\n    phone1,\r\n    phone2,\r\n    phone3,\r\n    delivermessage,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const newQuantityList = products.map((product) => ({\r\n      productId: product.id,\r\n      price: product.price,\r\n      quantity: 1,\r\n    }));\r\n    const price = newQuantityList.reduce((ac, cu) => {\r\n      return ac + cu.quantity * cu.price;\r\n    }, 0);\r\n    setQuantityList(newQuantityList);\r\n    settotalPrice(price);\r\n  }, [products]);\r\n  if (!user) {\r\n    return null;\r\n  }\r\n  //장바구니의 제품의 목록을 가져옴\r\n  const onQuantity = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let quantity = Number(e.target.value);\r\n    if (quantity <= 0) {\r\n      e.target.value = \"1\";\r\n      toast.error(\"1개 이상 구매가능 합니다!\");\r\n      quantity = 1;\r\n    }\r\n    const idx = Number(e.target.id);\r\n    const elem = quantityList[idx];\r\n    const changedElem: ProductQuantity = {\r\n      ...elem,\r\n      quantity,\r\n    };\r\n    const newQuantityList = [\r\n      ...quantityList.slice(0, idx),\r\n      changedElem,\r\n      ...quantityList.slice(idx + 1),\r\n    ];\r\n\r\n    setQuantityList(newQuantityList);\r\n    const newPrice = newQuantityList.reduce((ac, cu) => {\r\n      return ac + cu.quantity * cu.price;\r\n    }, 0);\r\n    settotalPrice(newPrice);\r\n  };\r\n  //유저가 구매할 물건의 수량을 번경할때마다 실행해서\r\n  //총 구매금액을 업데이트\r\n  //제품의 id와 수량을 업데이트\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!paymentPossible) {\r\n      toast.error(\"잔액 부족\");\r\n      return;\r\n    }\r\n    const productIdAndCount = quantityList.map((item) => ({\r\n      id: item.productId,\r\n      count: item.quantity,\r\n    }));\r\n    //제품의 id와 수량을 객체에 따로 보관해서 넘겨줌\r\n    const phone = phone1.value + \"-\" + phone2.value + \"-\" + phone3.value;\r\n    dispatch(\r\n      addOrder(\r\n        {\r\n          productIdAndCount,\r\n          cash: totalPrice,\r\n          address1: address,\r\n          address2: address2.value,\r\n          zipcode: zip,\r\n          name: name.value,\r\n          message: delivermessage.value,\r\n          phone,\r\n        },\r\n        props\r\n      )\r\n    );\r\n  };\r\n  // 잔액 부족시 결제 요청을 보내지 않음\r\n  return (\r\n    <Container>\r\n      <Title>결제창</Title>\r\n      <div>장바구니 목록</div>\r\n      <form onSubmit={onSubmit}>\r\n        <Section>\r\n          <CartItemList>\r\n            {products.map((product, i) => (\r\n              <ProductColumn key={product.id}>\r\n                <FatProductCard product={product} />\r\n                <input\r\n                  id={i.toString()}\r\n                  onChange={onQuantity}\r\n                  type=\"number\"\r\n                  defaultValue={1}\r\n                ></input>\r\n              </ProductColumn>\r\n            ))}\r\n          </CartItemList>\r\n        </Section>\r\n        <Section>\r\n          <Payment\r\n            cash={user.point}\r\n            setpaymentPossible={setpaymentPossible}\r\n            price={totalPrice}\r\n          />\r\n        </Section>\r\n        <Section>\r\n          <AddressForm addressFormProp={addressFormProp} />\r\n        </Section>\r\n        <Button>주문하기</Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../Components/Input\";\r\nimport { useInputNum2 } from \"../Hooks/useInput\";\r\nimport { chargeCash } from \"../Redux/User/thunk\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Container = styled.div``;\r\n\r\nexport default function ChargeCash() {\r\n  const chargeAmount = useInputNum2(\"\");\r\n  const dispatch = useDispatch();\r\n  const formSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(chargeCash(Number(chargeAmount.value)));\r\n  };\r\n  return (\r\n    <Container>\r\n      <form onSubmit={formSubmit}>\r\n        <span>충전할 금액</span>\r\n        <Input inputProp={{ ...chargeAmount }} />\r\n        <button>충전</button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { RootState } from \"../Redux/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getOrder } from \"../Redux/User/thunk\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst Container = styled.div``;\r\nconst Top = styled.div`\r\n  display: flex;\r\n  div {\r\n    color: lightsalmon;\r\n    font-size: 2em;\r\n    font-weight: 500;\r\n    margin-right: 1em;\r\n  }\r\n  margin: 10px 0;\r\n`;\r\nconst TopProductCard = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 100px 300px 100px 100px;\r\n  border-top: 3px solid black;\r\n  height: 2em;\r\n  padding-top: 0.5em;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  text-align: center;\r\n`;\r\nconst OrderCard = styled.div`\r\n  margin-top: 1.5em;\r\n  border: 1px solid lightgray;\r\n`;\r\nconst ProductCard = styled.div`\r\n  margin-bottom: 1em;\r\n\r\n  display: grid;\r\n  grid-template-columns: 100px 300px 100px 100px;\r\n`;\r\nconst ProductCardColumn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ShipmentCard = styled.div`\r\n  section {\r\n    display: flex;\r\n\r\n    label {\r\n      width: 100px;\r\n      background-color: lightgray;\r\n      text-align: center;\r\n      margin-top: 5px;\r\n    }\r\n    p {\r\n      margin-left: 10px;\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Strong = styled.div`\r\n  font-weight: 700;\r\n  font-size: 1.5em;\r\n`;\r\nconst ProductInfo = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ProductDescription = styled.div``;\r\nconst Image = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Button = styled.button`\r\n  height: 1.5em;\r\n`;\r\nexport default function OrderList() {\r\n  const orders = useSelector((state: RootState) => state.user.orders);\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getOrder());\r\n  }, []);\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        {orders.map((order) => (\r\n          <OrderCard id={order.id} key={order.id}>\r\n            <Top>\r\n              <div>\r\n                <span>주문일자 : </span>\r\n                <span>{order.createdAt.slice(0, 10)}</span>\r\n              </div>\r\n              {user?.isAdmin && (\r\n                <div>\r\n                  <span>주문자 : </span>\r\n                  <span>{order.user?.userId}</span>\r\n                </div>\r\n              )}\r\n            </Top>\r\n            <TopProductCard>\r\n              <Column>상품주문번호</Column>\r\n              <Column>상품정보</Column>\r\n              <Column>\r\n                <div>상품금액</div>\r\n                <div>(수량)</div>\r\n              </Column>\r\n              <Column>진행상태</Column>\r\n            </TopProductCard>\r\n            {order.products.map((product) => (\r\n              <ProductCard key={product.id}>\r\n                <ProductCardColumn>\r\n                  <div>{order.orderNumber}</div>\r\n                </ProductCardColumn>\r\n                <ProductCardColumn>\r\n                  <ProductInfo>\r\n                    <Image>\r\n                      <img\r\n                        width={150}\r\n                        height={150}\r\n                        src={product.thumbnail}\r\n                      ></img>\r\n                    </Image>\r\n                    <ProductDescription>\r\n                      <Strong>{product.name}</Strong>\r\n                      <p>{product.description}</p>\r\n                    </ProductDescription>\r\n                  </ProductInfo>\r\n                </ProductCardColumn>\r\n                <ProductCardColumn>\r\n                  <div>\r\n                    <div>{product.price} 원</div>\r\n                    <div>{`(${product.count})`} 개</div>\r\n                  </div>\r\n                </ProductCardColumn>\r\n                <ProductCardColumn>\r\n                  <div>구매완료</div>\r\n                </ProductCardColumn>\r\n              </ProductCard>\r\n            ))}\r\n            <ShipmentCard>\r\n              <Strong>배송지 정보</Strong>\r\n              <section>\r\n                <label>수령인</label>\r\n                <p>{order.name}</p>\r\n              </section>\r\n              <section>\r\n                <label>연락처</label>\r\n                <p>{order.phone}</p>\r\n              </section>\r\n              <section>\r\n                <label>배송지</label>\r\n                <p>{order.zipcode}</p>\r\n                <p>{order.address1}</p>\r\n                <p>{order.address2}</p>\r\n              </section>\r\n              <section>\r\n                <label>배송 메모</label>\r\n                <p>{order.message}</p>\r\n              </section>\r\n            </ShipmentCard>\r\n          </OrderCard>\r\n        ))}\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Product } from \"../../Model/db\";\r\n\r\nconst Container = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  div {\r\n    margin-left: 2em;\r\n  }\r\n  button {\r\n    margin-left: 2em;\r\n  }\r\n`;\r\nexport default function ProductListElem({\r\n  product,\r\n  setproduct,\r\n  setmodalVisible,\r\n}: {\r\n  product: Product;\r\n  setproduct: React.Dispatch<any>;\r\n  setmodalVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const clickBtn = () => {\r\n    setproduct(product);\r\n    setmodalVisible(true);\r\n  };\r\n  return (\r\n    <Container>\r\n      <img width={100} height={100} src={product.thumbnail} />\r\n      <div>제품 이름:{product.name}</div>\r\n      <div>제품 가격:{product.price}</div>\r\n      <div>제품 제고:{product.stock}</div>\r\n      <button onClick={clickBtn}>수정</button>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddProduct from \"../../Routes/AddProduct\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Product } from \"../../Model/db\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 20%;\r\n  left: 20%;\r\n  border: 1px solid red;\r\n  background-color: white;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\nconst Button = styled.button`\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\ninterface Props extends RouteComponentProps {\r\n  setmodalVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n  product: Product | undefined;\r\n}\r\nexport default function ChangeProductForm(props: Props) {\r\n  useEffect(() => {\r\n    document.body.style.cssText = `\r\n            position: fixed; \r\n            top: -${window.scrollY}px;\r\n            width:${100}%;\r\n        `; //body에 스타일을 줘서 스크롤을 막고 고정되게 함\r\n    return () => {\r\n      const scrollY = document.body.style.top;\r\n      document.body.style.cssText = `position: \"\"; top: \"\";`;\r\n      window.scrollTo(0, parseInt(scrollY || \"0\") * -1);\r\n    }; //body에 원래 스크롤 자리로 옮겨주고 스크롤을 가능하게함\r\n  }, []);\r\n  const clickCloseBtn = () => {\r\n    props.setmodalVisible(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Button onClick={clickCloseBtn}>✖</Button>\r\n      <AddProduct\r\n        product={props.product}\r\n        match={props.match}\r\n        history={props.history}\r\n        location={props.location}\r\n      />\r\n    </Container>\r\n  ); //Addproduct 의 position을 fixed로 바꾸어줌\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../Redux/index\";\r\nimport { getProducts } from \"../../Redux/Product/thunk\";\r\nimport ProductListElem from \"./ProductListElem\";\r\nimport { useState } from \"react\";\r\nimport { Product } from \"../../Model/db\";\r\nimport ChangeProductForm from \"../Modal/ChangeProductForm\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst Container = styled.ul``;\r\n\r\nexport default function ProductList(props: RouteComponentProps) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state: RootState) => state.product.products);\r\n  const [product, setproduct] = useState<Product>();\r\n  const [modalVisible, setmodalVisible] = useState(false);\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, []);\r\n  return (\r\n    <Wrapper>\r\n      {modalVisible && (\r\n        <ChangeProductForm\r\n          product={product}\r\n          setmodalVisible={setmodalVisible}\r\n          match={props.match}\r\n          history={props.history}\r\n          location={props.location}\r\n        />\r\n      )}\r\n      <Container>\r\n        {productList.map((product) => (\r\n          <ProductListElem\r\n            key={product.id}\r\n            product={product}\r\n            setproduct={setproduct}\r\n            setmodalVisible={setmodalVisible}\r\n          />\r\n        ))}\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllQuestion } from \"../../Redux/Admin/thunk\";\r\nimport { RootState } from \"../../Redux/index\";\r\n\r\nimport QnaLine from \"../Qna/QnaLine\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nconst Container = styled.div``;\r\nconst QnaBox = styled.div`\r\n  border: 1px solid red;\r\n  margin: 3px 0;\r\n`;\r\nconst ButtonBox = styled.div`\r\n  margin-top: 5px;\r\n  margin-left: 6px;\r\n`;\r\nconst Button = styled.button`\r\n  margin-left: 1px;\r\n  margin-top: 1px;\r\n`;\r\ntype Props = RouteComponentProps;\r\nexport default function QuestionList(props: Props) {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllQuestion());\r\n  }, []);\r\n  const qnaList = useSelector((state: RootState) => state.admin.qna);\r\n  const clickGoProduct = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    const element = e.target as HTMLElement;\r\n    const pid = element.id;\r\n    props.history.push(`/productDetail/${pid}`);\r\n  };\r\n  return (\r\n    <Container>\r\n      {qnaList.map((qna) => {\r\n        if (qna.product) {\r\n          return (\r\n            <QnaBox key={qna.id}>\r\n              <ButtonBox>\r\n                <Button id={qna.product.id} onClick={clickGoProduct}>\r\n                  제품보기\r\n                </Button>\r\n              </ButtonBox>\r\n              <QnaLine page=\"admin\" qna={qna} pid={qna.product.id} />\r\n            </QnaBox>\r\n          );\r\n        }\r\n        return <QnaLine page=\"admin\" key={qna.id} qna={qna} pid=\"0\" />;\r\n      })}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport OrderList from \"./OrderList\";\r\nimport ProductList from \"../Components/Admin/ProductList\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport QuestionList from \"../Components/Admin/QuestionList\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst Header = styled.div`\r\n  margin-top: 1em;\r\n  width: 90%;\r\n  margin: 1em auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst HeaderColumn = styled.div`\r\n  font-weight: 600;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Container = styled.div``;\r\n//기본적으로 주문목록을 볼 수 있고\r\n//HeaderColumn을 클릭하면 다른화면을 볼 수 있다.\r\nexport default function AdminPage(props: RouteComponentProps) {\r\n  const [state, setstate] = useState(\"1\");\r\n  const clickHeader = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    const elem = e.target as HTMLElement;\r\n    setstate(elem.id);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Header>\r\n        <HeaderColumn id=\"1\" onClick={clickHeader}>\r\n          주문목록\r\n        </HeaderColumn>\r\n        <HeaderColumn id=\"2\" onClick={clickHeader}>\r\n          제품목록\r\n        </HeaderColumn>\r\n        <HeaderColumn id=\"3\" onClick={clickHeader}>\r\n          질문 목록\r\n        </HeaderColumn>\r\n      </Header>\r\n      <Container>\r\n        {state === \"1\" && <OrderList />}\r\n        {state === \"2\" && (\r\n          <ProductList\r\n            match={props.match}\r\n            history={props.history}\r\n            location={props.location}\r\n          />\r\n        )}\r\n        {state === \"3\" && (\r\n          <QuestionList\r\n            match={props.match}\r\n            history={props.history}\r\n            location={props.location}\r\n          />\r\n        )}\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Strong = styled.h1`\r\n  font-size: 4em;\r\n  font-weight: 700;\r\n  margin: 20px 0;\r\n`;\r\nexport default function ForbiddenPage() {\r\n  return (\r\n    <Container>\r\n      <Strong>접근권한이 없습니다.</Strong>\r\n      <Link to=\"/\">홈으로 가기</Link>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ForbiddenPage from \"../Routes/ForbiddenPage\";\r\n\r\nconst RouterIf = ({\r\n  component: Component,\r\n  isAuth,\r\n  path,\r\n}: {\r\n  component: React.ComponentType<any>;\r\n  isAuth: boolean;\r\n  path: string;\r\n}) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={(props) => {\r\n        if (isAuth) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <ForbiddenPage />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default RouterIf;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport baseurl from \"../baseurl\";\r\n// link에 match.url 을 쓰지 않아서 일일히 baseurl 을 적는대신 새로움 컴포넌트를 만듬\r\nexport default function RedirectBaseurl() {\r\n    console.log('redirect com');\r\n    \r\n    const history =useHistory();\r\n    if(baseurl===''){\r\n        history.push('/');\r\n    }\r\n    \r\n    const exitBaseurl = history.location.pathname.indexOf(baseurl);\r\n\r\n    //여기서는 error 가 나는 이유는????\r\n    // if(exitBaseurl===-1){\r\n    //     const newPath  = baseurl+ history.location.pathname;\r\n    //     history.replace(newPath);\r\n    // }\r\n    // else{\r\n    //     history.push(baseurl);\r\n    // }\r\n    useEffect(() => {\r\n        if(exitBaseurl===-1){\r\n            const newPath  = baseurl+ history.location.pathname;\r\n            history.replace(newPath);\r\n        }\r\n        else{\r\n            history.push(baseurl);\r\n        }\r\n    }, []);\r\n    return <></>\r\n}","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"./Routes/Home\";\r\nimport AddProduct from \"./Routes/AddProduct\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./../src/Styles/Theme\";\r\nimport { GlobalStyle } from \"./Styles/GlobalStyle\";\r\nimport Login from \"./Routes/Login\";\r\nimport SignUp from \"./Routes/SignUp\";\r\nimport ProductDetail from \"./Routes/ProductDetail\";\r\nimport QnaForm from \"./Components/Qna/QnaForm\";\r\nimport AnswerForm from \"./Components/AnswerForm\";\r\nimport Layout from \"./Components/Layout\";\r\nimport OrderSheet from \"./Routes/OrderSheet\";\r\nimport ChargeCash from \"./Routes/ChargeCash\";\r\nimport OrderList from \"./Routes/OrderList\";\r\nimport AdminPage from \"./Routes/AdminPage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"./Redux/index\";\r\nimport RouterIf from \"./Components/RouterIf\";\r\nimport baseurl from \"./baseurl\";\r\nimport RedirectBaseurl from \"./Components/RedirectBaseurl\";\r\n\r\nexport default function App() {\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  //Router 를 RouterIf 로감싸서 인증된 사용자에게만 페이지를 보여주도록 한다.\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <>\r\n        <GlobalStyle />\r\n        <BrowserRouter>\r\n          <Layout>\r\n            <Switch>\r\n              <RouterIf\r\n                path={`${baseurl}/orderSheet`}\r\n                component={OrderSheet}\r\n                isAuth={user ? true : false}\r\n              />\r\n              <RouterIf\r\n                path={`${baseurl}/chargeCash`}\r\n                component={ChargeCash}\r\n                isAuth={user ? true : false}\r\n              />\r\n              <RouterIf\r\n                path={`${baseurl}/orderList`}\r\n                component={OrderList}\r\n                isAuth={user ? true : false}\r\n              />\r\n              <RouterIf\r\n                path={`${baseurl}/addproduct`}\r\n                component={AddProduct}\r\n                isAuth={user?.isAdmin ? true : false}\r\n              />\r\n              <RouterIf\r\n                path={`${baseurl}/answerform/:qnaId`}\r\n                component={AnswerForm}\r\n                isAuth={user?.isAdmin ? true : false}\r\n              />\r\n              <RouterIf\r\n                path={`${baseurl}/adminPage`}\r\n                component={AdminPage}\r\n                isAuth={user?.isAdmin ? true : false}\r\n              />\r\n              <Route path={`${baseurl}/`} exact component={Home} />\r\n              <Route path={`${baseurl}/login`} component={Login} />\r\n              <Route path={`${baseurl}/signup`} component={SignUp} />\r\n              <Route\r\n                path={`${baseurl}/productDetail/:productIndex`}\r\n                component={ProductDetail}\r\n              />\r\n              <Route path={`${baseurl}/qnaform/:productId`} component={QnaForm} />\r\n              <Route path=\"*\" component={RedirectBaseurl} />\r\n              {/* <Redirect path=\"*\" to={`${baseurl}/`} /> */}\r\n            </Switch>\r\n          </Layout>\r\n        </BrowserRouter>\r\n        <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as types from \"./types\";\r\nimport { Product } from \"../../Model/db\";\r\nimport GetProductsAction from \"./action\";\r\nimport { AxiosError } from \"axios\";\r\nimport { GET_PRODUCT_DETAIL_FAILURE } from \"./types\";\r\nimport {\r\n  GET_PRODUCT_DETAIL_REQUEST,\r\n  GET_PRODUCT_DETAIL_SUCCESS,\r\n} from \"./types\";\r\n\r\ninterface ErrorReason {\r\n  get: AxiosError | null;\r\n  addProduct: AxiosError | null;\r\n  willDelete: AxiosError | null;\r\n  deleteProduct: AxiosError | null;\r\n  addReview: AxiosError | null;\r\n  addQuestion: AxiosError | null;\r\n  addAnswer: AxiosError | null;\r\n  getPrdQuestions: AxiosError | null;\r\n  addImageErr: AxiosError | null;\r\n  editProductErr: AxiosError | null;\r\n  getProductDetail: AxiosError | null;\r\n}\r\nexport interface ProductState {\r\n  products: Product[];\r\n  error: ErrorReason;\r\n  productDetail: Product | null;\r\n  imagesPath: { url: string; idx: string }[];\r\n}\r\n\r\nconst initialState: ProductState = {\r\n  products: [],\r\n  imagesPath: [],\r\n  productDetail: null,\r\n  error: {\r\n    get: null,\r\n    addProduct: null,\r\n    willDelete: null,\r\n    deleteProduct: null,\r\n    addReview: null,\r\n    addQuestion: null,\r\n    addAnswer: null,\r\n    getPrdQuestions: null,\r\n    addImageErr: null,\r\n    editProductErr: null,\r\n    getProductDetail: null,\r\n  },\r\n};\r\n\r\nconst productReducer = (\r\n  state = initialState,\r\n  action: GetProductsAction\r\n): ProductState => {\r\n  switch (action.type) {\r\n    case types.GET_PRODUCTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          get: null,\r\n        },\r\n      };\r\n    case types.GET_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    case types.GET_PRODUCTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          get: action.payload,\r\n        },\r\n      };\r\n    case types.ADD_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addProduct: null,\r\n        },\r\n      };\r\n    case types.ADD_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        products: [action.payload, ...state.products],\r\n        imagesPath: [],\r\n      };\r\n    case types.ADD_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addProduct: action.payload,\r\n        },\r\n        imagesPath: [],\r\n      };\r\n    case types.WILL_DELETE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          willDelete: null,\r\n        },\r\n      };\r\n    case types.WILL_DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.WILL_DELETE_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          willDelete: action.payload,\r\n        },\r\n      };\r\n    case types.DELETE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          deleteProduct: null,\r\n        },\r\n      };\r\n    case types.DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.DELETE_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          deleteProduct: action.payload,\r\n        },\r\n      };\r\n    case types.ADD_REVIEW_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addReview: null,\r\n        },\r\n      };\r\n    case types.ADD_REVIEW_SUCCESS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.ADD_REVIEW_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addReview: action.payload,\r\n        },\r\n      };\r\n    case types.ADD_QUESTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addQuestion: null,\r\n        },\r\n      };\r\n    case types.ADD_QUESTION_SUCCESS: {\r\n      const qna = action.payload;\r\n      const pid = qna.product?.id;\r\n      const curProducts = state.products;\r\n      const newProducts = curProducts.map((pro) => {\r\n        if (pro.id === pid) {\r\n          pro.qnas = [action.payload, ...pro.qnas];\r\n        }\r\n        return pro;\r\n      });\r\n      return {\r\n        ...state,\r\n        products: newProducts,\r\n      };\r\n    }\r\n    case types.ADD_QUESTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addQuestion: action.payload,\r\n        },\r\n      };\r\n    case types.ADD_ANSWER_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addAnswer: null,\r\n        },\r\n      };\r\n    case types.ADD_ANSWER_SUCCESS: {\r\n      const answer = action.payload;\r\n      const proId = answer.product?.id;\r\n      const preProducts = state.products;\r\n      const newproducts = preProducts.map((pro) => {\r\n        if (pro.id === proId) {\r\n          let qnaIdx = 0;\r\n          pro.qnas.forEach((qna, i) => {\r\n            if (qna.id === answer.question?.id) {\r\n              qnaIdx = i;\r\n            }\r\n          });\r\n          pro.qnas.splice(qnaIdx + 1, 0, answer);\r\n        }\r\n        return pro;\r\n      });\r\n      return {\r\n        ...state,\r\n        products: newproducts,\r\n      };\r\n    }\r\n\r\n    case types.ADD_ANSWER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addAnswer: action.payload,\r\n        },\r\n      };\r\n    case types.GET_PRD_QUESTIONS_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          getPrdQuestions: null,\r\n        },\r\n      };\r\n    case types.GET_PRD_QUESTIONS_SUCCESS: {\r\n      const questionList = action.payload.qnaList;\r\n\r\n      const productId = action.payload.productId;\r\n      const newProductList = state.products.map((product) => {\r\n        if (product.id === productId) {\r\n          product.qnas = questionList;\r\n          return product;\r\n        }\r\n        return product;\r\n      });\r\n      return {\r\n        ...state,\r\n        products: newProductList,\r\n      };\r\n    }\r\n    case types.GET_PRD_QUESTIONS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          getPrdQuestions: action.payload,\r\n        },\r\n      };\r\n    case types.ADD_IMAGE_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addImageErr: null,\r\n        },\r\n      };\r\n    case types.ADD_IMAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        imagesPath: action.payload,\r\n      };\r\n    case types.ADD_IMAGE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          addImageErr: action.payload,\r\n        },\r\n      };\r\n    case types.EDIT_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          editProductErr: null,\r\n        },\r\n      };\r\n    case types.EDIT_PRODUCT_SUCCESS: {\r\n      const returnProduct = action.payload;\r\n      const editProductList = state.products.map((pro) => {\r\n        if (pro.id === returnProduct.id) {\r\n          return returnProduct;\r\n        }\r\n        return pro;\r\n      });\r\n      return {\r\n        ...state,\r\n        products: editProductList,\r\n      };\r\n    }\r\n    case types.EDIT_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          editProductErr: action.payload,\r\n        },\r\n      };\r\n    case types.GET_PRODUCT_DETAIL_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          getProductDetail: null,\r\n        },\r\n      };\r\n    case types.GET_PRODUCT_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        productDetail: action.payload,\r\n      };\r\n    case types.GET_PRODUCT_DETAIL_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: {\r\n          ...state.error,\r\n          getProductDetail: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;\r\n","import { AxiosError } from \"axios\";\r\nimport { createReducer } from \"typesafe-actions\";\r\n\r\nimport { User, Product, Order } from \"../../Model/db\";\r\nimport { UserAction } from \"./types\";\r\n\r\nimport { CheckIdData } from \"./action\";\r\n\r\ninterface UserState {\r\n  user: User | null;\r\n  orders: Order[];\r\n  err: {\r\n    getProfileErr: AxiosError | null;\r\n    getUsersErr: AxiosError | null;\r\n    loginErr: AxiosError | null;\r\n    logoutErr: AxiosError | null;\r\n    signUpErr: AxiosError | null;\r\n    checkIdErr: AxiosError | null;\r\n    editProfileErr: AxiosError | null;\r\n    addCartErr: AxiosError | null;\r\n    deleteCartErr: AxiosError | null;\r\n    addOrderErr: AxiosError | null;\r\n    chargeErr: AxiosError | null;\r\n    getOrdersErr: AxiosError | null;\r\n    addReivewErr: AxiosError | null;\r\n    emptyCartErr: AxiosError | null;\r\n  };\r\n  checkId: CheckIdData;\r\n  cart: Product[];\r\n}\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n  orders: [],\r\n  err: {\r\n    getProfileErr: null,\r\n    getUsersErr: null,\r\n    loginErr: null,\r\n    logoutErr: null,\r\n    signUpErr: null,\r\n    checkIdErr: null,\r\n    editProfileErr: null,\r\n    addCartErr: null,\r\n    deleteCartErr: null,\r\n    addOrderErr: null,\r\n    chargeErr: null,\r\n    getOrdersErr: null,\r\n    addReivewErr: null,\r\n    emptyCartErr: null,\r\n  },\r\n  checkId: { message: \"\", possible: false },\r\n  cart: [],\r\n};\r\n\r\nconst userReducer = createReducer<UserState, UserAction>(initialState, {\r\n  GET_PROFILE_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, getProfileErr: null },\r\n  }),\r\n  GET_PROFILE_SUCCESS: (state, action) => ({\r\n    ...state,\r\n    user: action.payload.user,\r\n    cart: action.payload.cart,\r\n  }),\r\n  GET_PROFILE_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, getProfileErr: action.payload },\r\n  }),\r\n  GET_USERS_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, getUsersErr: null },\r\n  }),\r\n  GET_USERS_SUCCESS: (state, action) => ({ ...state, user: action.payload }),\r\n  GET_USERS_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, getUsersErr: action.payload },\r\n  }),\r\n  LOG_IN_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, loginErr: null },\r\n  }),\r\n  LOG_IN_SUCCESS: (state, action) => ({\r\n    ...state,\r\n    user: action.payload.user,\r\n    cart: action.payload.cart,\r\n  }),\r\n  LOG_IN_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, loginErr: action.payload },\r\n  }),\r\n  LOG_OUT_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, logoutErr: null },\r\n  }),\r\n  LOG_OUT_SUCCESS: (state) => ({ ...state, user: null }),\r\n  LOG_OUT_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, logoutErr: action.payload },\r\n  }),\r\n  SIGN_UP_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, signUpErr: null },\r\n  }),\r\n  SIGN_UP_SUCCESS: (state) => ({\r\n    ...state,\r\n    checkId: { message: \"\", possible: false },\r\n  }),\r\n  SIGN_UP_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, signUpErr: action.payload },\r\n  }),\r\n  CHECK_ID_REQUEST: (state) => ({\r\n    ...state,\r\n    checkId: { message: \"\", possible: false },\r\n    err: { ...state.err, checkIdErr: null },\r\n  }),\r\n  CHECK_ID_SUCCESS: (state, action) => ({ ...state, checkId: action.payload }),\r\n  CHECK_ID_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, checkIdErr: action.payload },\r\n  }),\r\n  EDIT_PROFILE_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, editProfileErr: null },\r\n  }),\r\n  EDIT_PROFILE_SUCCESS: (state, action) => ({ ...state, user: action.payload }),\r\n  EDIT_PROFILE_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, editProfileErr: action.payload },\r\n  }),\r\n  ADD_CART_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, addCartErr: null },\r\n  }),\r\n  ADD_CART_SUCCESS: (state, action) => {\r\n    if (!action.payload) {\r\n      return { ...state };\r\n    }\r\n    return {\r\n      ...state,\r\n      cart: [...state.cart, action.payload],\r\n    };\r\n  },\r\n  ADD_CART_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, addCartErr: action.payload },\r\n  }),\r\n  DELETE_CART_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, deleteCartErr: null },\r\n  }),\r\n  DELETE_CART_SUCCESS: (state, action) => {\r\n    if (!state.user) return { ...state };\r\n    return {\r\n      ...state,\r\n      cart: action.payload,\r\n    };\r\n  },\r\n  DELETE_CART_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, deleteCartErr: action.payload },\r\n  }),\r\n  ADD_ORDER_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, addOrderErr: null },\r\n  }),\r\n  ADD_ORDER_SUCCESS: (state, action) => {\r\n    if (state.user) {\r\n      return {\r\n        ...state,\r\n        orders: [action.payload.order, ...state.orders],\r\n        user: {\r\n          ...state.user,\r\n          point: action.payload.remainCash,\r\n        },\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        orders: [action.payload.order, ...state.orders],\r\n      };\r\n    }\r\n  },\r\n  ADD_ORDER_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, addOrderErr: action.payload },\r\n  }),\r\n  CHARGE_CASH_REQUEST: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, chargeErr: action.payload },\r\n  }),\r\n  CHARGE_CASH_SUCCESS: (state, action) => {\r\n    if (!state.user) {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    const newUser = { ...state.user, point: action.payload };\r\n    return {\r\n      ...state,\r\n      user: newUser,\r\n    };\r\n  },\r\n  CHARGE_CASH_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, chargeErr: action.payload },\r\n  }),\r\n  GET_ORDERS_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, getOrdersErr: null },\r\n  }),\r\n  GET_ORDERS_SUCCESS: (state, action) => ({\r\n    ...state,\r\n    orders: action.payload,\r\n  }),\r\n  GET_ORDERS_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, getOrdersErr: action.payload },\r\n  }),\r\n  ADD_REVIEW_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, getOrdersErr: null },\r\n  }),\r\n  ADD_REVIEW_SUCCESS: (state, action) => {\r\n    const review = action.payload;\r\n    state.orders.forEach((order) => {\r\n      if (order.id === review.orderId) {\r\n        order.products.forEach((product) => {\r\n          if (product.id === review.productId) {\r\n            product.reviews = [review, ...product.reviews];\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return {\r\n      ...state,\r\n    };\r\n  },\r\n  ADD_REVIEW_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, addReviewErr: action.payload },\r\n  }),\r\n  EMPTY_CART_REQUEST: (state) => ({\r\n    ...state,\r\n    err: { ...state.err, emptyCartErr: null },\r\n  }),\r\n  EMPTY_CART_SUCCESS: (state, action) => ({ ...state, cart: action.payload }),\r\n  EMPTY_CART_FAILURE: (state, action) => ({\r\n    ...state,\r\n    err: { ...state.err, emptyCartErr: action.payload },\r\n  }),\r\n});\r\n\r\n//object map 이 더 보기가 좋은것 같음\r\n/* const userReducer = createReducer<UserState,UserAction>(initialState)\r\n    .handleType([types.GET_USERS_REQUEST,\r\n        types.LOG_IN_REQUEST,\r\n        types.SIGN_UP_REQUEST,\r\n        types.CHECK_ID_REQUEST,\r\n        types.EDIT_PROFILE_REQUEST],state=>({...state}))\r\n    .handleType([types.GET_USERS_FAILURE,\r\n        types.LOG_IN_FAILURE,\r\n        types.SIGN_UP_FAILURE,\r\n        types.CHECK_ID_FAILURE,\r\n        types.EDIT_PROFILE_FAILURE],(state,action)=>({...state,err:action.payload})) */\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport product from \"./Product/_index\";\r\nimport user from \"./User/_index\";\r\nimport popup from \"./Popup/reducer\";\r\nimport admin from \"./Admin/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  product,\r\n  user,\r\n  popup,\r\n  admin,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./Redux/Store/configureStore\";\r\n\r\nconst store = configureStore();\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../index\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nconst configureStore = () =>\r\n  //  스토어를 생성한다\r\n  createStore(\r\n    // 루트 리듀서를 전달한다\r\n    rootReducer,\r\n\r\n    process.env.REACT_APP_DEV === \"DEV\"\r\n      ? composeWithDevTools(applyMiddleware(createLogger(), reduxThunk))\r\n      : applyMiddleware(reduxThunk)\r\n    // 미들웨어 형태의 리덕스 개발 도구를 추가한다\r\n  );\r\n\r\nexport default configureStore;\r\n"],"sourceRoot":""}